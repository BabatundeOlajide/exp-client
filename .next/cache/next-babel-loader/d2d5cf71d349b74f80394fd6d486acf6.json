{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web and AsyncStorage for react-native\n\nimport storageSession from 'redux-persist/lib/storage/session'; // session storgae\n\nimport rootReducer from './reducers';\nvar persistConfig = {\n  key: 'root',\n  storage: st,\n  blacklist: ['authentication']\n};\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\nvar myInitailState = {}; // A create store function for `withReduxStore` context wrapper\n\nexport function initializeStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : myInitailState;\n  return createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n} // //creates a store without redux-persist\n// export function initializeStore (initialState = myInitailState) {\n//   return createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n// }","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/store.js"],"names":["createStore","applyMiddleware","persistReducer","composeWithDevTools","thunkMiddleware","storage","storageSession","rootReducer","persistConfig","key","st","blacklist","persistedReducer","myInitailState","initializeStore","initialState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;;AAChD,OAAOC,cAAP,MAA2B,mCAA3B,C,CAA+D;;AAE/D,OAAOC,WAAP,MAAwB,YAAxB;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBJ,EAAAA,OAAO,EAACK,EAFY;AAGpBC,EAAAA,SAAS,EAAC,CAAC,gBAAD;AAHU,CAAtB;AAMA,IAAMC,gBAAgB,GAAGV,cAAc,CAACM,aAAD,EAAgBD,WAAhB,CAAvC;AAEA,IAAMM,cAAc,GAAG,EAAvB,C,CAEA;;AACA,OAAO,SAASC,eAAT,GAAyD;AAAA,MAA/BC,YAA+B,uEAAhBF,cAAgB;AAC9D,SAAOb,WAAW,CAACY,gBAAD,EAAmBG,YAAnB,EAAiCZ,mBAAmB,CAACF,eAAe,CAACG,eAAD,CAAhB,CAApD,CAAlB;AACD,C,CAGD;AACA;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\nimport storageSession from 'redux-persist/lib/storage/session' // session storgae\n\nimport rootReducer from './reducers';\n\nconst persistConfig = {\n  key: 'root',\n  storage:st,\n  blacklist:['authentication']\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst myInitailState = {}\n\n// A create store function for `withReduxStore` context wrapper\nexport function initializeStore (initialState = myInitailState) {\n  return createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n}\n\n\n// //creates a store without redux-persist\n// export function initializeStore (initialState = myInitailState) {\n//   return createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n// }\n"]},"metadata":{},"sourceType":"module"}