{"ast":null,"code":"import { userConstants } from '../constants';\nimport UserService from '../services/UserService';\nexport var userActions = {\n  addUser: addUser,\n  getAllUsers: getAllUsers,\n  selectUser: selectUser,\n  searchUser: searchUser,\n  resetFilter: resetFilter,\n  \"delete\": _delete\n};\nvar userService = new UserService();\n\nfunction addUser(data) {\n  return function (dispatch, getState) {\n    var token = getState().authentication.token; //dispatch(request(data));\n\n    userService.addUser(data, token).then(function (result) {\n      //console.log(JSON.stringify(result))\n      dispatch(success(result.data.user));\n    }, function (error) {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction getAllUsers() {\n  return function (dispatch, getState) {\n    dispatch(request());\n    var token = getState().authentication.token;\n    userService.getAllUser(token).then(function (result) {\n      return dispatch(success(result.data.users));\n    }, function (error) {\n      return dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users: users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction selectUser(userId) {\n  return function (dispatch) {\n    dispatch({\n      type: userConstants.SELECT_USER,\n      userId: userId\n    });\n  };\n}\n\nfunction resetFilter() {\n  return function (dispatch, getState) {\n    var users = getState().users.allUsers;\n    dispatch({\n      type: userConstants.RESET_FILTER,\n      users: users\n    });\n  };\n}\n\nfunction searchUser() {\n  return function (dispatch, getState) {\n    var all = getState().users.allUsers;\n    var query = q.lower();\n\n    if (query && query != \"\") {\n      var _q = query.split(\" \");\n\n      var filtered = all.filter(function (user) {\n        if (_q[0] && user.email.lower().includes(_q[0])) {\n          return user;\n        }\n\n        if (_q[1] && user.email.includes(_q[1])) {\n          return user;\n        }\n\n        if (_q[0] && user.firstName.includes(_q[0])) {\n          return user;\n        }\n\n        if (_q[1] && user.firstName.includes(_q[1])) {\n          return user;\n        }\n\n        if (_q[0] && user.lastName.includes(_q[0])) {\n          return user;\n        }\n\n        if (_q[1] && user.lastName.includes(_q[1])) {\n          return user;\n        }\n      });\n      dispatch({\n        type: userConstants.FILTERED_USER,\n        users: filtered\n      });\n    } else {\n      dispatch({\n        type: userConstants.FILTERED_USER,\n        user: all\n      });\n    }\n  };\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return function (dispatch) {\n    dispatch(request(id));\n    userService[\"delete\"](id).then(function (user) {\n      return dispatch(success(id));\n    }, function (error) {\n      return dispatch(failure(id, error.toString()));\n    });\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id: id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id: id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id: id,\n      error: error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","UserService","userActions","addUser","getAllUsers","selectUser","searchUser","resetFilter","_delete","userService","data","dispatch","getState","token","authentication","then","result","success","user","error","failure","toString","request","type","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","getAllUser","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","userId","SELECT_USER","allUsers","RESET_FILTER","all","query","q","lower","split","filtered","filter","email","includes","firstName","lastName","FILTERED_USER","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\n\nimport UserService from '../services/UserService';\n\nexport const userActions = {\n    addUser,\n    getAllUsers,\n    selectUser,\n    searchUser,\n    resetFilter,\n    delete: _delete\n};\n\nconst userService = new UserService()\n\n\nfunction addUser(data) {\n    return (dispatch, getState) => {\n        const {token} = getState().authentication;\n        //dispatch(request(data));\n\n        userService.addUser(data, token)\n            .then(\n                result => { \n                    //console.log(JSON.stringify(result))\n                    dispatch(success(result.data.user));\n                    \n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAllUsers() {\n    return (dispatch, getState) => {\n        dispatch(request());\n        const token = getState().authentication.token\n        userService.getAllUser(token)\n            .then(\n                \n                result => dispatch(success(result.data.users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { \n        return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\nfunction selectUser(userId) {\n    return (dispatch) => {\n        dispatch({ type: userConstants.SELECT_USER, userId });\n        \n    };\n    \n}\n\nfunction resetFilter() {\n    return (dispatch, getState) => {\n        const users = getState().users.allUsers\n        dispatch({ type: userConstants.RESET_FILTER, users });\n        \n    };\n    \n}\n\nfunction searchUser() {\n    return (dispatch, getState) => {\n        const all = getState().users.allUsers\n        const  query = q.lower()\n        if (query && query != \"\"){\n            const q = query.split(\" \")\n            const filtered = all.filter(user => {\n                if (q[0] && user.email.lower().includes(q[0])){\n                    return user\n                }\n\n                if (q[1] && user.email.includes(q[1])){\n                    return user\n                }\n\n                if (q[0] && user.firstName.includes(q[0])){\n                    return user\n                }\n\n                if (q[1] && user.firstName.includes(q[1])){\n                    return user\n                }\n\n                if (q[0] && user.lastName.includes(q[0])){\n                    return user\n                }\n\n                if (q[1] && user.lastName.includes(q[1])){\n                    return user\n                }\n                    \n            })\n\n            dispatch({ type: userConstants.FILTERED_USER, users: filtered })\n\n        } else {\n\n            dispatch({ type: userConstants.FILTERED_USER, user: all })\n        }\n        \n    };\n    \n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}