{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { userConstants } from '../constants';\nexport function users() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case userConstants.REGISTER_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        allUsers: [].concat(_toConsumableArray(state.allUsers), [action.user]),\n        filteredUsers: [action.user].concat(_toConsumableArray(state.filteredUsers)),\n        lastAdded: action.user\n      });\n\n    case userConstants.GETALL_REQUEST:\n      return {\n        loading: true\n      };\n\n    case userConstants.GETALL_SUCCESS:\n      return {\n        allUsers: action.users,\n        filteredUsers: action.users,\n        loading: false\n      };\n\n    case userConstants.GETALL_FAILURE:\n      return {\n        loading: false,\n        error: action.error\n      };\n\n    case userConstants.UPDATE_USER_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        updateUserSuccess: false,\n        updateUserError: \"\"\n      });\n\n    case userConstants.UPDATE_USER_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        updateUserSuccess: true,\n        updateUserError: \"\"\n      });\n\n    case userConstants.UPDATE_USER_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        updateUserSuccess: false,\n        updateUserError: action.error\n      });\n\n    case userConstants.SELECT_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedUser: state.allUsers.find(function (user) {\n          return user.id === action.userId;\n        })\n      });\n\n    case userConstants.FILTERED_USER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filteredUsers: action.users\n      });\n\n    case userConstants.RESET_FILTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filteredUsers: action.users\n      });\n\n    case userConstants.USER_REPORT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reportRequestSuccess: false,\n        reportRequestError: \"\"\n      });\n\n    case userConstants.USER_REPORT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reportRequestSuccess: true,\n        reportRequestError: \"\",\n        selectedReport: action.report\n      });\n\n    case userConstants.USER_REPORT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reportRequestSuccess: false,\n        reportRequestError: action.error,\n        selectedReport: null\n      });\n\n    case userConstants.UPDATE_USER_IN_STORE:\n      var currentUser = state.selectedUser;\n      if (currentUser.id === action.user.id) currentUser = action.user;\n      var filteredUsers = state.filteredUsers;\n      var allUsers = state.allUsers;\n      var index = filteredUsers.findIndex(function (x) {\n        return x.id == currentUser.id;\n      });\n      if (index != -1) filteredUsers[index] = action.user;\n      index = allUsers.findIndex(function (x) {\n        return x.id == currentUser.id;\n      });\n      if (index != -1) allUsers[index] = action.user;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedUser: currentUser,\n        filteredUsers: filteredUsers,\n        allUsers: allUsers\n      });\n\n    case userConstants.REPORT_UPLOAD_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        uploadReportSuccess: false,\n        uploadReportError: \"\"\n      });\n\n    case userConstants.REPORT_UPLOAD_SUCCESS:\n      var curUser = state.selectedUser;\n      if (curUser.id === action.data.user.id) curUser = action.data.user;\n      var ftdUsers = state.filteredUsers;\n      var all = state.allUsers;\n      var ind = filteredUsers.findIndex(function (x) {\n        return x.id == currentUser.id;\n      });\n      if (ind != -1) filteredUsers[ind] = action.user;\n      index = allUsers.findIndex(function (x) {\n        return x.id == currentUser.id;\n      });\n      if (index != -1) allUsers[index] = action.user;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        uploadReportSuccess: true,\n        uploadReportError: \"\"\n      });\n\n    case userConstants.REPORT_UPLOAD_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        uploadReportSuccess: false,\n        uploadReportError: action.error\n      });\n\n    case userConstants.DELETE_REQUEST:\n      // add 'deleting:true' property to user being deleted\n      return _objectSpread(_objectSpread({}, state), {}, {\n        allUsers: state.allUsers.map(function (user) {\n          return user.id === action.id ? _objectSpread(_objectSpread({}, user), {}, {\n            deleting: true\n          }) : user;\n        })\n      });\n\n    case userConstants.DELETE_SUCCESS:\n      // remove deleted user from state\n      return {\n        allUsers: state.allUsers.filter(function (user) {\n          return user.id !== action.id;\n        })\n      };\n\n    case userConstants.DELETE_FAILURE:\n      // remove 'deleting:true' property and add 'deleteError:[error]' property to user \n      return _objectSpread(_objectSpread({}, state), {}, {\n        allUsers: state.allUsers.map(function (user) {\n          if (user.id === action.id) {\n            // make copy of user without 'deleting:true' property\n            var deleting = user.deleting,\n                userCopy = _objectWithoutProperties(user, [\"deleting\"]); // return copy of user with 'deleteError:[error]' property\n\n\n            return _objectSpread(_objectSpread({}, userCopy), {}, {\n              deleteError: action.error\n            });\n          }\n\n          return user;\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/reducers/users.reducer.js"],"names":["userConstants","users","state","action","type","REGISTER_SUCCESS","allUsers","user","filteredUsers","lastAdded","GETALL_REQUEST","loading","GETALL_SUCCESS","GETALL_FAILURE","error","UPDATE_USER_REQUEST","updateUserSuccess","updateUserError","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","SELECT_USER","selectedUser","find","id","userId","FILTERED_USER","RESET_FILTER","USER_REPORT_REQUEST","reportRequestSuccess","reportRequestError","USER_REPORT_SUCCESS","selectedReport","report","USER_REPORT_FAILURE","UPDATE_USER_IN_STORE","currentUser","index","findIndex","x","REPORT_UPLOAD_REQUEST","uploadReportSuccess","uploadReportError","REPORT_UPLOAD_SUCCESS","curUser","data","ftdUsers","all","ind","REPORT_UPLOAD_FAILURE","DELETE_REQUEST","map","deleting","DELETE_SUCCESS","filter","DELETE_FAILURE","userCopy","deleteError"],"mappings":";;;;;;;;AAAA,SAASA,aAAT,QAA8B,cAA9B;AAEA,OAAO,SAASC,KAAT,GAAmC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,aAAa,CAACK,gBAAnB;AACE,6CACKH,KADL;AAEEI,QAAAA,QAAQ,+BAAMJ,KAAK,CAACI,QAAZ,IAAsBH,MAAM,CAACI,IAA7B,EAFV;AAGEC,QAAAA,aAAa,GAAGL,MAAM,CAACI,IAAV,4BAAmBL,KAAK,CAACM,aAAzB,EAHf;AAIEC,QAAAA,SAAS,EAAEN,MAAM,CAACI;AAJpB;;AAOF,SAAKP,aAAa,CAACU,cAAnB;AACE,aAAO;AACLC,QAAAA,OAAO,EAAE;AADJ,OAAP;;AAIF,SAAKX,aAAa,CAACY,cAAnB;AACE,aAAO;AACLN,QAAAA,QAAQ,EAAEH,MAAM,CAACF,KADZ;AAELO,QAAAA,aAAa,EAAEL,MAAM,CAACF,KAFjB;AAGLU,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKX,aAAa,CAACa,cAAnB;AACE,aAAO;AACLF,QAAAA,OAAO,EAAC,KADH;AAELG,QAAAA,KAAK,EAAEX,MAAM,CAACW;AAFT,OAAP;;AAIF,SAAKd,aAAa,CAACe,mBAAnB;AACE,6CACKb,KADL;AAEEc,QAAAA,iBAAiB,EAAC,KAFpB;AAGEC,QAAAA,eAAe,EAAC;AAHlB;;AAMF,SAAKjB,aAAa,CAACkB,mBAAnB;AACE,6CACKhB,KADL;AAEEc,QAAAA,iBAAiB,EAAC,IAFpB;AAGEC,QAAAA,eAAe,EAAC;AAHlB;;AAMF,SAAKjB,aAAa,CAACmB,mBAAnB;AACE,6CACKjB,KADL;AAEEc,QAAAA,iBAAiB,EAAC,KAFpB;AAGEC,QAAAA,eAAe,EAACd,MAAM,CAACW;AAHzB;;AAMF,SAAKd,aAAa,CAACoB,WAAnB;AACE,6CACKlB,KADL;AAEEmB,QAAAA,YAAY,EAAEnB,KAAK,CAACI,QAAN,CAAegB,IAAf,CAAoB,UAAAf,IAAI;AAAA,iBAAIA,IAAI,CAACgB,EAAL,KAAYpB,MAAM,CAACqB,MAAvB;AAAA,SAAxB;AAFhB;;AAIF,SAAKxB,aAAa,CAACyB,aAAnB;AACE,6CACKvB,KADL;AAEEM,QAAAA,aAAa,EAAEL,MAAM,CAACF;AAFxB;;AAIF,SAAKD,aAAa,CAAC0B,YAAnB;AACE,6CACKxB,KADL;AAEEM,QAAAA,aAAa,EAAEL,MAAM,CAACF;AAFxB;;AAIF,SAAKD,aAAa,CAAC2B,mBAAnB;AACE,6CACKzB,KADL;AAEE0B,QAAAA,oBAAoB,EAAC,KAFvB;AAGEC,QAAAA,kBAAkB,EAAC;AAHrB;;AAKF,SAAK7B,aAAa,CAAC8B,mBAAnB;AACE,6CACK5B,KADL;AAEE0B,QAAAA,oBAAoB,EAAC,IAFvB;AAGEC,QAAAA,kBAAkB,EAAC,EAHrB;AAIEE,QAAAA,cAAc,EAAE5B,MAAM,CAAC6B;AAJzB;;AAMF,SAAKhC,aAAa,CAACiC,mBAAnB;AACE,6CACK/B,KADL;AAEE0B,QAAAA,oBAAoB,EAAC,KAFvB;AAGEC,QAAAA,kBAAkB,EAAC1B,MAAM,CAACW,KAH5B;AAIEiB,QAAAA,cAAc,EAAE;AAJlB;;AAOF,SAAK/B,aAAa,CAACkC,oBAAnB;AACE,UAAIC,WAAW,GAAGjC,KAAK,CAACmB,YAAxB;AAEA,UAAGc,WAAW,CAACZ,EAAZ,KAAmBpB,MAAM,CAACI,IAAP,CAAYgB,EAAlC,EACEY,WAAW,GAAGhC,MAAM,CAACI,IAArB;AAEF,UAAMC,aAAa,GAAGN,KAAK,CAACM,aAA5B;AACA,UAAMF,QAAQ,GAAGJ,KAAK,CAACI,QAAvB;AAEA,UAAI8B,KAAK,GAAG5B,aAAa,CAAC6B,SAAd,CAAwB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACf,EAAF,IAAQY,WAAW,CAACZ,EAAxB;AAAA,OAAzB,CAAZ;AACA,UAAIa,KAAK,IAAI,CAAC,CAAd,EACE5B,aAAa,CAAC4B,KAAD,CAAb,GAAuBjC,MAAM,CAACI,IAA9B;AAEF6B,MAAAA,KAAK,GAAG9B,QAAQ,CAAC+B,SAAT,CAAmB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACf,EAAF,IAAQY,WAAW,CAACZ,EAAxB;AAAA,OAApB,CAAR;AACA,UAAIa,KAAK,IAAI,CAAC,CAAd,EACE9B,QAAQ,CAAC8B,KAAD,CAAR,GAAkBjC,MAAM,CAACI,IAAzB;AAEF,6CACKL,KADL;AAEEmB,QAAAA,YAAY,EAAEc,WAFhB;AAGE3B,QAAAA,aAAa,EAAEA,aAHjB;AAIEF,QAAAA,QAAQ,EAAEA;AAJZ;;AAOF,SAAKN,aAAa,CAACuC,qBAAnB;AACE,6CACKrC,KADL;AAEEsC,QAAAA,mBAAmB,EAAE,KAFvB;AAGEC,QAAAA,iBAAiB,EAAE;AAHrB;;AAKF,SAAKzC,aAAa,CAAC0C,qBAAnB;AAEE,UAAIC,OAAO,GAAGzC,KAAK,CAACmB,YAApB;AAEA,UAAGsB,OAAO,CAACpB,EAAR,KAAepB,MAAM,CAACyC,IAAP,CAAYrC,IAAZ,CAAiBgB,EAAnC,EACEoB,OAAO,GAAGxC,MAAM,CAACyC,IAAP,CAAYrC,IAAtB;AAEF,UAAMsC,QAAQ,GAAG3C,KAAK,CAACM,aAAvB;AACA,UAAMsC,GAAG,GAAG5C,KAAK,CAACI,QAAlB;AAEA,UAAIyC,GAAG,GAAGvC,aAAa,CAAC6B,SAAd,CAAwB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACf,EAAF,IAAQY,WAAW,CAACZ,EAAxB;AAAA,OAAzB,CAAV;AACA,UAAIwB,GAAG,IAAI,CAAC,CAAZ,EACEvC,aAAa,CAACuC,GAAD,CAAb,GAAqB5C,MAAM,CAACI,IAA5B;AAEF6B,MAAAA,KAAK,GAAG9B,QAAQ,CAAC+B,SAAT,CAAmB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACf,EAAF,IAAQY,WAAW,CAACZ,EAAxB;AAAA,OAApB,CAAR;AACA,UAAIa,KAAK,IAAI,CAAC,CAAd,EACE9B,QAAQ,CAAC8B,KAAD,CAAR,GAAkBjC,MAAM,CAACI,IAAzB;AACF,6CACKL,KADL;AAEEsC,QAAAA,mBAAmB,EAAE,IAFvB;AAGEC,QAAAA,iBAAiB,EAAE;AAHrB;;AAKF,SAAKzC,aAAa,CAACgD,qBAAnB;AACE,6CACK9C,KADL;AAEEsC,QAAAA,mBAAmB,EAAE,KAFvB;AAGEC,QAAAA,iBAAiB,EAAEtC,MAAM,CAACW;AAH5B;;AAKF,SAAKd,aAAa,CAACiD,cAAnB;AACE;AACA,6CACK/C,KADL;AAEEI,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAe4C,GAAf,CAAmB,UAAA3C,IAAI;AAAA,iBAC/BA,IAAI,CAACgB,EAAL,KAAYpB,MAAM,CAACoB,EAAnB,mCACShB,IADT;AACe4C,YAAAA,QAAQ,EAAE;AADzB,eAEI5C,IAH2B;AAAA,SAAvB;AAFZ;;AAQF,SAAKP,aAAa,CAACoD,cAAnB;AACE;AACA,aAAO;AACL9C,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAe+C,MAAf,CAAsB,UAAA9C,IAAI;AAAA,iBAAIA,IAAI,CAACgB,EAAL,KAAYpB,MAAM,CAACoB,EAAvB;AAAA,SAA1B;AADL,OAAP;;AAGF,SAAKvB,aAAa,CAACsD,cAAnB;AACE;AACA,6CACKpD,KADL;AAEEI,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAe4C,GAAf,CAAmB,UAAA3C,IAAI,EAAI;AACnC,cAAIA,IAAI,CAACgB,EAAL,KAAYpB,MAAM,CAACoB,EAAvB,EAA2B;AACzB;AADyB,gBAEjB4B,QAFiB,GAES5C,IAFT,CAEjB4C,QAFiB;AAAA,gBAEJI,QAFI,4BAEShD,IAFT,iBAGzB;;;AACA,mDAAYgD,QAAZ;AAAsBC,cAAAA,WAAW,EAAErD,MAAM,CAACW;AAA1C;AACD;;AAED,iBAAOP,IAAP;AACD,SATS;AAFZ;;AAaF;AACE,aAAOL,KAAP;AA3KJ;AA6KD","sourcesContent":["import { userConstants } from '../constants';\n\nexport function users(state = {}, action) {\n  switch (action.type) {\n    case userConstants.REGISTER_SUCCESS:\n      return {\n        ...state,\n        allUsers: [...state.allUsers, action.user],\n        filteredUsers: [action.user, ...state.filteredUsers ],\n        lastAdded: action.user\n      };\n\n    case userConstants.GETALL_REQUEST:\n      return {\n        loading: true\n      };\n    \n    case userConstants.GETALL_SUCCESS:\n      return {\n        allUsers: action.users,\n        filteredUsers: action.users,\n        loading: false\n      };\n    case userConstants.GETALL_FAILURE:\n      return { \n        loading:false,\n        error: action.error\n      };\n    case userConstants.UPDATE_USER_REQUEST:\n      return {\n        ...state,\n        updateUserSuccess:false,\n        updateUserError:\"\",\n        \n      };\n    case userConstants.UPDATE_USER_SUCCESS:\n      return {\n        ...state,\n        updateUserSuccess:true,\n        updateUserError:\"\",\n        \n      };\n    case userConstants.UPDATE_USER_FAILURE:\n      return {\n        ...state,\n        updateUserSuccess:false,\n        updateUserError:action.error,\n      \n      };\n    case userConstants.SELECT_USER:\n      return {\n        ...state,\n        selectedUser: state.allUsers.find(user => user.id === action.userId)\n      };\n    case userConstants.FILTERED_USER:\n      return {\n        ...state,\n        filteredUsers: action.users\n      };\n    case userConstants.RESET_FILTER:\n      return {\n        ...state,\n        filteredUsers: action.users\n      };\n    case userConstants.USER_REPORT_REQUEST:\n      return {\n        ...state,\n        reportRequestSuccess:false,\n        reportRequestError:\"\"\n      };\n    case userConstants.USER_REPORT_SUCCESS:\n      return {\n        ...state,\n        reportRequestSuccess:true,\n        reportRequestError:\"\",\n        selectedReport: action.report\n      };\n    case userConstants.USER_REPORT_FAILURE:\n      return {\n        ...state,\n        reportRequestSuccess:false,\n        reportRequestError:action.error,\n        selectedReport: null\n      };\n\n    case userConstants.UPDATE_USER_IN_STORE:\n      let currentUser = state.selectedUser\n\n      if(currentUser.id === action.user.id)\n        currentUser = action.user\n\n      const filteredUsers = state.filteredUsers\n      const allUsers = state.allUsers\n\n      let index = filteredUsers.findIndex(x => x.id == currentUser.id)\n      if (index != -1)\n        filteredUsers[index] = action.user\n      \n      index = allUsers.findIndex(x => x.id == currentUser.id)\n      if (index != -1)\n        allUsers[index] = action.user\n      \n      return {\n        ...state,\n        selectedUser: currentUser,\n        filteredUsers: filteredUsers,\n        allUsers: allUsers\n      };\n\n    case userConstants.REPORT_UPLOAD_REQUEST:\n      return {\n        ...state,\n        uploadReportSuccess: false,\n        uploadReportError: \"\",\n      }\n    case userConstants.REPORT_UPLOAD_SUCCESS:\n\n      let curUser = state.selectedUser\n\n      if(curUser.id === action.data.user.id)\n        curUser = action.data.user\n\n      const ftdUsers = state.filteredUsers\n      const all = state.allUsers\n\n      let ind = filteredUsers.findIndex(x => x.id == currentUser.id)\n      if (ind != -1)\n        filteredUsers[ind] = action.user\n      \n      index = allUsers.findIndex(x => x.id == currentUser.id)\n      if (index != -1)\n        allUsers[index] = action.user\n      return {\n        ...state,\n        uploadReportSuccess: true,\n        uploadReportError: \"\",\n      }\n    case userConstants.REPORT_UPLOAD_FAILURE:\n      return {\n        ...state,\n        uploadReportSuccess: false,\n        uploadReportError: action.error,\n      }\n    case userConstants.DELETE_REQUEST:\n      // add 'deleting:true' property to user being deleted\n      return {\n        ...state,\n        allUsers: state.allUsers.map(user =>\n          user.id === action.id\n            ? { ...user, deleting: true }\n            : user\n        )\n      };\n    case userConstants.DELETE_SUCCESS:\n      // remove deleted user from state\n      return {\n        allUsers: state.allUsers.filter(user => user.id !== action.id)\n      };\n    case userConstants.DELETE_FAILURE:\n      // remove 'deleting:true' property and add 'deleteError:[error]' property to user \n      return {\n        ...state,\n        allUsers: state.allUsers.map(user => {\n          if (user.id === action.id) {\n            // make copy of user without 'deleting:true' property\n            const { deleting, ...userCopy } = user;\n            // return copy of user with 'deleteError:[error]' property\n            return { ...userCopy, deleteError: action.error };\n          }\n\n          return user;\n        })\n      };\n    default:\n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}