{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { userActions } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { pattern, errorMessage } from '../constants';\nimport { closeModal } from \"../utils/functions\";\n\nconst UpdateUserModal = ({\n  children,\n  pageProps,\n  updateUserError,\n  error,\n  updateUserSuccess,\n  updateUser,\n  selectedUser\n}) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    errors\n  } = useForm();\n\n  const onSubmit = formData => {\n    updateUser(formData); // reset form\n\n    if (!updateUserError) {\n      reset();\n      closeModal(\"updateUserModal\");\n    }\n  };\n\n  console.log(JSON.stringify(updateUserError));\n  return __jsx(\"div\", {\n    id: \"updateUserModal\",\n    className: \"modal\"\n  }, __jsx(\"div\", {\n    className: \"modal-content\"\n  }, __jsx(\"span\", {\n    className: \"close\",\n    \"data-type\": \"hide-modal\",\n    \"data-target\": \"updateUserModal\"\n  }, \"\\xD7\"), __jsx(\"h3\", null, \"Update User\"), __jsx(\"hr\", {\n    className: \"divider\"\n  }), updateUserError && updateUserError.length > 0 && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, \" \", updateUserError.message))), Object.keys(errors).length != 0 && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, errors.firstName && __jsx(\"li\", null, \" \", errors.firstName.message, \" \"), errors.lastName && __jsx(\"li\", null, \" \", errors.lastName.message, \" \"), errors.email && __jsx(\"li\", null, \" \", errors.email.message), errors.phoneNumber && __jsx(\"li\", null, \" \", errors.phoneNumber.message, \" \"))), selectedUser && __jsx(\"form\", {\n    className: \"pure-form pure-form-aligned\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"fieldset\", null, __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"Firstname\"\n  }, \"Firstname\"), __jsx(\"input\", {\n    name: \"firstName\",\n    type: \"text\",\n    id: \"Firstname\",\n    placeholder: \"FirstName\",\n    defaultValue: selectedUser.firstName,\n    ref: register({\n      required: \"FirstName is required\"\n    })\n  })), __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"Lastname\"\n  }, \"Lastname\"), __jsx(\"input\", {\n    name: \"lastName\",\n    type: \"text\",\n    id: \"Lastname\",\n    placeholder: \"LastName\",\n    defaultValue: selectedUser.lastName,\n    ref: register({\n      required: \"LastName is required\"\n    })\n  })), __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"Email\"\n  }, \"Email Address\"), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"Email\",\n    placeholder: \"Email Address\",\n    defaultValue: selectedUser.email,\n    ref: register({\n      required: \"Email is required\",\n      pattern: {\n        value: pattern.EMAIL,\n        message: errorMessage.INVALID_EMAIL\n      }\n    })\n  })), __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"Phone\"\n  }, \"Phone Number\"), __jsx(\"input\", {\n    type: \"tel\",\n    name: \"phoneNumber\",\n    pattern: \"^(\\\\+1[0-9]{3}|[0-9]{3})[0-9]{3}[0-9]{4}$\",\n    id: \"Phone\",\n    placeholder: \"Phone number\",\n    defaultValue: selectedUser.phoneNumber,\n    ref: register({\n      required: \"Phone Number is required\",\n      pattern: {\n        value: pattern.PHONE,\n        message: errorMessage.INVALID_PHONE\n      }\n    })\n  })), __jsx(\"div\", {\n    className: \"pure-controls\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"pure-button button-secondary\"\n  }, \"Submit\"))))));\n};\n\nconst mapStateToProps = state => ({\n  updateUserError: state.users.updateUserError,\n  updateUserSuccess: state.users.updateUserSuccess,\n  selectedUser: state.users.selectedUser\n});\n\nconst mapDispatchToProps = {\n  updateUser: userActions.updateUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateUserModal);","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/components/updateUserModal.js"],"names":["Link","userActions","connect","useForm","pattern","errorMessage","closeModal","UpdateUserModal","children","pageProps","updateUserError","error","updateUserSuccess","updateUser","selectedUser","register","handleSubmit","reset","errors","onSubmit","formData","console","log","JSON","stringify","length","message","Object","keys","firstName","lastName","email","phoneNumber","required","value","EMAIL","INVALID_EMAIL","PHONE","INVALID_PHONE","mapStateToProps","state","users","mapDispatchToProps"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\nimport { userActions } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { pattern, errorMessage } from '../constants';\nimport { closeModal } from \"../utils/functions\";\n\nconst UpdateUserModal = ({children, pageProps, updateUserError,error, updateUserSuccess, updateUser, selectedUser}) => {\n    const {register, handleSubmit,reset, errors} = useForm();\n    const onSubmit = formData => {\n        updateUser(formData);\n\n        // reset form\n        if (!updateUserError){\n            reset()\n            closeModal(\"updateUserModal\")\n            \n        }\n            \n\n    }\n    console.log(JSON.stringify(updateUserError))\n    return <div id=\"updateUserModal\" className=\"modal\">\n         \n        <div className=\"modal-content\">\n            <span className=\"close\" data-type=\"hide-modal\" data-target=\"updateUserModal\">&times;</span>\n            <h3>Update User</h3>\n            <hr className=\"divider\"/>\n            \n            { updateUserError && updateUserError.length > 0 && <div className=\"panel code error-msg\">\n                  <ul>\n                    <li> {updateUserError.message}</li>    \n                  </ul>\n                   \n                </div>\n\n            }\n            { Object.keys(errors).length != 0 && \n                <div className=\"panel code error-msg\">\n                  <ul>\n                    \n                    {errors.firstName && <li> {errors.firstName.message} </li> }\n                    {errors.lastName && <li> {errors.lastName.message} </li> }\n    \n                    {errors.email && <li> {errors.email.message}</li> }\n                    {errors.phoneNumber && <li> {errors.phoneNumber.message} </li> }\n                    \n                  </ul>\n                   \n                </div>\n            }\n\n            { selectedUser &&\n            <form className=\"pure-form pure-form-aligned\" onSubmit={handleSubmit(onSubmit)}>\n              <fieldset>\n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"Firstname\">Firstname</label>\n                      <input name=\"firstName\" type=\"text\" id=\"Firstname\" placeholder=\"FirstName\" defaultValue={selectedUser.firstName} ref={\n                          register({\n                              required:\"FirstName is required\"\n                          })\n                      } />\n                  </div>\n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"Lastname\">Lastname</label>\n                      <input name=\"lastName\" type=\"text\" id=\"Lastname\" placeholder=\"LastName\" defaultValue={selectedUser.lastName} ref={\n                          register({\n                              required:\"LastName is required\"\n                          })\n                      } />\n                  </div>\n                  \n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"Email\">Email Address</label>\n                      <input type=\"email\" name=\"email\" id=\"Email\" placeholder=\"Email Address\" defaultValue={selectedUser.email} ref={register({required:\"Email is required\", \n                            pattern:{\n                            value:pattern.EMAIL,\n                            message:errorMessage.INVALID_EMAIL\n                            }\n                        })} />\n                  </div>\n\n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"Phone\">Phone Number</label>\n                      <input type=\"tel\" name=\"phoneNumber\" pattern=\"^(\\+1[0-9]{3}|[0-9]{3})[0-9]{3}[0-9]{4}$\" id=\"Phone\" placeholder=\"Phone number\" defaultValue={selectedUser.phoneNumber} ref={register({required:\"Phone Number is required\", \n                            pattern:{\n                            value:pattern.PHONE,\n                            message:errorMessage.INVALID_PHONE\n\n                            }\n                        })} />\n                  </div>\n                  \n                  <div className=\"pure-controls\">\n                      <button type=\"submit\" className=\"pure-button button-secondary\">Submit</button>\n                  </div>\n                </fieldset>\n              </form>\n             }\n            \n        </div>\n    </div>\n}\n\n\nconst mapStateToProps = state => ({\n    updateUserError: state.users.updateUserError,\n    updateUserSuccess: state.users.updateUserSuccess,\n    selectedUser: state.users.selectedUser\n  });\n\nconst mapDispatchToProps = {\n    updateUser: userActions.updateUser\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateUserModal) \n"]},"metadata":{},"sourceType":"module"}