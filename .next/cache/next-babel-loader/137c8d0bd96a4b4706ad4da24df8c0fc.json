{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { userActions } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { pattern, errorMessage } from '../constants';\nimport Papa from \"papaparse\";\n\nvar UploadReportModal = function UploadReportModal(_ref) {\n  _s();\n\n  var children = _ref.children,\n      pageProps = _ref.pageProps,\n      addUserError = _ref.addUserError,\n      addUser = _ref.addUser,\n      selectedUser = _ref.selectedUser,\n      lastAdded = _ref.lastAdded;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      reset = _useForm.reset,\n      errors = _useForm.errors;\n\n  var processData = function processData(headers, body) {\n    //console.log(headers)\n    //console.log(body)\n    var requestBody = {};\n    var mainKey = headers[0];\n    var jsonData = {};\n\n    var _loop = function _loop(i) {\n      var record = [];\n      var key = headers[i];\n      body.map(function (line) {\n        var rec = {};\n        var field = line[mainKey];\n        var value = line[key];\n        field = field.replace(/\\s/g, \"_\");\n        field = field.replace(\"(\", \"\");\n        field = field.replace(\")\", \"\");\n        field = field.replace(\"%\", \"P\");\n        value = value.replace();\n        rec[field] = value;\n        record.push(rec);\n      });\n      jsonData[key] = record;\n    };\n\n    for (var i = 1; i < headers.length; i++) {\n      _loop(i);\n    }\n\n    requestBody[\"userId\"] = selectedUser.id;\n    requestBody[\"data\"] = jsonData;\n    console.log(jsonData);\n  };\n\n  var onSubmit = function onSubmit(formData) {\n    var file = formData.selectedFile[0];\n    var data = null;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: function complete(result) {\n        if (result.errors.length != 0) throw Error(JSON.stringify(result.errors));\n        processData(result.meta.fields, result.data);\n      }\n    });\n    console.log(data); //addUser(formData);\n    // if (!addUserError){\n    //     reset()\n    // }\n  };\n\n  return __jsx(\"div\", {\n    id: \"uploadReportModal\",\n    className: \"modal\"\n  }, __jsx(\"div\", {\n    className: \"modal-content\"\n  }, __jsx(\"span\", {\n    className: \"close\",\n    \"data-type\": \"hide-modal\",\n    \"data-target\": \"uploadReportModal\"\n  }, \"\\xD7\"), selectedUser && __jsx(\"h3\", null, \"Upload a report for \", __jsx(\"span\", {\n    className: \"blue\"\n  }, selectedUser.firstName + \" \" + selectedUser.lastName)), __jsx(\"hr\", {\n    className: \"divider\"\n  }), lastAdded && !addUserError && Object.keys(errors).length == 0 && __jsx(\"div\", {\n    className: \"panel code\"\n  }, __jsx(\"h4\", {\n    className: \"success\"\n  }, \" LAST RECORD: \", lastAdded.firstName + \" \" + lastAdded.lastName)), addUserError && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, \" \", error))), Object.keys(errors).length != 0 && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, errors.firstName && __jsx(\"li\", null, \" \", errors.firstName.message, \" \"), errors.lastName && __jsx(\"li\", null, \" \", errors.lastName.message, \" \"), errors.email && __jsx(\"li\", null, \" \", errors.email.message), errors.phoneNumber && __jsx(\"li\", null, \" \", errors.phoneNumber.message, \" \"))), __jsx(\"form\", {\n    className: \"pure-form pure-form-stacked\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"fieldset\", null, __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"selectedFile\"\n  }, \"Select file\"), __jsx(\"input\", {\n    name: \"selectedFile\",\n    required: true,\n    type: \"file\",\n    id: \"selectedFile\",\n    placeholder: \"choose report file (csv)\",\n    ref: register\n  })), __jsx(\"br\", null), __jsx(\"div\", {\n    className: \"pure-controls\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"pure-button button-secondary\"\n  }, \"Submit\"))))));\n};\n\n_s(UploadReportModal, \"NZvb3w7fZeCHPRzMNHe38sEWX9M=\", false, function () {\n  return [useForm];\n});\n\n_c = UploadReportModal;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    addUserError: state.users.addUserError,\n    lastAdded: state.users.lastAdded,\n    selectedUser: state.users.selectedUser\n  };\n};\n\nvar mapDispatchToProps = {\n  addUser: userActions.addUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadReportModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadReportModal\");","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/components/uploadReportModal.js"],"names":["Link","userActions","connect","useForm","pattern","errorMessage","Papa","UploadReportModal","children","pageProps","addUserError","addUser","selectedUser","lastAdded","register","handleSubmit","reset","errors","processData","headers","body","requestBody","mainKey","jsonData","i","record","key","map","line","rec","field","value","replace","push","length","id","console","log","onSubmit","formData","file","selectedFile","data","parse","header","skipEmptyLines","complete","result","Error","JSON","stringify","meta","fields","firstName","lastName","Object","keys","error","message","email","phoneNumber","mapStateToProps","state","users","mapDispatchToProps"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\nimport { userActions } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { pattern, errorMessage } from '../constants';\nimport Papa from \"papaparse\"\n\nconst UploadReportModal = ({children, pageProps,addUserError, addUser,selectedUser, lastAdded}) => {\n    const {register, handleSubmit,reset, errors} = useForm();\n    \n\n    const processData = (headers, body ) => {\n        //console.log(headers)\n        //console.log(body)\n        const requestBody = {}\n\n        const mainKey = headers[0]\n        const jsonData = {} \n        for (let i = 1; i < headers.length; i++) {\n            let record = []\n            let key = headers[i]\n            body.map(line => {\n                let rec = {}\n\n                let field = line[mainKey]\n                let value = line[key]\n\n                field = field.replace(/\\s/g, \"_\")\n                field = field.replace(\"(\", \"\")\n                field = field.replace(\")\", \"\")\n                field = field.replace(\"%\", \"P\")\n\n                value = value.replace()\n                rec[field] = value\n                record.push(rec)\n            })\n\n            jsonData[key] = record\n        }\n\n        requestBody[\"userId\"] = selectedUser.id\n        requestBody[\"data\"] = jsonData\n        console.log(jsonData)\n    }\n\n    const onSubmit = formData => {\n        const file = formData.selectedFile[0]\n\n        let data = null;\n \n        Papa.parse(file, {\n            header:true,\n            skipEmptyLines:true,\n            \n            complete: result => {\n                if (result.errors.length != 0)\n                    throw Error(JSON.stringify(result.errors))\n                processData(result.meta.fields, result.data)\n                \n            }\n        })\n        \n\n        console.log(data)\n\n        \n        //addUser(formData);\n\n        \n        // if (!addUserError){\n        //     reset()\n            \n        // }\n            \n\n    }\n    return <div id=\"uploadReportModal\" className=\"modal\">\n         \n        <div className=\"modal-content\">\n            <span className=\"close\" data-type=\"hide-modal\" data-target=\"uploadReportModal\">&times;</span>\n            {selectedUser && <h3>Upload a report for <span className=\"blue\">{selectedUser.firstName + \" \" + selectedUser.lastName}</span></h3> }\n            <hr className=\"divider\"/>\n            {lastAdded && !addUserError && (Object.keys(errors).length == 0) && <div className=\"panel code\">\n            <h4 className=\"success\"> LAST RECORD: {lastAdded.firstName + \" \" + lastAdded.lastName}</h4>\n                </div>\n            }\n            { addUserError && <div className=\"panel code error-msg\">\n                  <ul>\n                    <li> {error}</li>    \n                  </ul>\n                   \n                </div>\n\n            }\n            { Object.keys(errors).length != 0 && \n                <div className=\"panel code error-msg\">\n                  <ul>\n                    \n                    {errors.firstName && <li> {errors.firstName.message} </li> }\n                    {errors.lastName && <li> {errors.lastName.message} </li> }\n    \n                    {errors.email && <li> {errors.email.message}</li> }\n                    {errors.phoneNumber && <li> {errors.phoneNumber.message} </li> }\n                    \n                  </ul>\n                   \n                </div>\n            }\n            \n            <form className=\"pure-form pure-form-stacked\" onSubmit={handleSubmit(onSubmit)}>\n              <fieldset>\n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"selectedFile\">Select file</label>\n                      <input name=\"selectedFile\" required={true} type=\"file\" id=\"selectedFile\" placeholder=\"choose report file (csv)\" ref={register} />\n                  </div>\n                  <br/>\n                  \n                  <div className=\"pure-controls\">\n                      <button type=\"submit\" className=\"pure-button button-secondary\">Submit</button>\n                  </div>\n                </fieldset>\n              </form>\n          \n            \n        </div>\n    </div>\n}\n\n\nconst mapStateToProps = state => ({\n    addUserError: state.users.addUserError,\n    lastAdded: state.users.lastAdded,\n    selectedUser: state.users.selectedUser\n  });\n\nconst mapDispatchToProps = {\n    addUser: userActions.addUser\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(UploadReportModal) \n"]},"metadata":{},"sourceType":"module"}