{"ast":null,"code":"import { userConstants } from '../constants';\nimport UserService from '../services/UserService';\nexport var userActions = {\n  addUser: addUser,\n  getAllUser: getAllUser,\n  \"delete\": _delete\n};\nvar userService = new UserService();\n\nfunction addUser(data) {\n  return function (dispatch, getState) {\n    var token = getState().authentication.token; //dispatch(request(data));\n\n    userService.addUser(data, token).then(function (user) {\n      dispatch(success(user));\n    }, function (error) {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction getAllUser() {\n  return function (dispatch, getState) {\n    dispatch(request());\n    var token = getState().authentication.token;\n    userService.getAllUser(token).then(function (result) {\n      return dispatch(success(resul));\n    }, function (error) {\n      return dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users: users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error: error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return function (dispatch) {\n    dispatch(request(id));\n    userService[\"delete\"](id).then(function (user) {\n      return dispatch(success(id));\n    }, function (error) {\n      return dispatch(failure(id, error.toString()));\n    });\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id: id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id: id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id: id,\n      error: error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","UserService","userActions","addUser","getAllUser","_delete","userService","data","dispatch","getState","token","authentication","then","user","success","error","failure","toString","request","type","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","result","resul","GETALL_REQUEST","users","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\n\nimport UserService from '../services/UserService';\n\nexport const userActions = {\n    addUser,\n    getAllUser,\n    delete: _delete\n};\n\nconst userService = new UserService()\n\n\nfunction addUser(data) {\n    return (dispatch, getState) => {\n        const {token} = getState().authentication;\n        //dispatch(request(data));\n\n        userService.addUser(data, token)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    \n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAllUser() {\n    return (dispatch, getState) => {\n        dispatch(request());\n        const token = getState().authentication.token\n        userService.getAllUser(token)\n            .then(\n                \n                result => dispatch(success(resul)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}