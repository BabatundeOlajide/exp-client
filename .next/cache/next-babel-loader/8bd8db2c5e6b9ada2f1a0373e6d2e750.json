{"ast":null,"code":"import { userConstants } from '../constants';\nimport UserService from '../services/UserService';\nexport const userActions = {\n  addUser,\n  getAllUsers,\n  selectUser,\n  searchUser,\n  delete: _delete\n};\nconst userService = new UserService();\n\nfunction addUser(data) {\n  return (dispatch, getState) => {\n    const {\n      token\n    } = getState().authentication; //dispatch(request(data));\n\n    userService.addUser(data, token).then(result => {\n      //console.log(JSON.stringify(result))\n      dispatch(success(result.data.user));\n    }, error => {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getAllUsers() {\n  return (dispatch, getState) => {\n    dispatch(request());\n    const token = getState().authentication.token;\n    userService.getAllUser(token).then(result => dispatch(success(result.data.users)), error => dispatch(failure(error.toString())));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n}\n\nfunction selectUser(userId) {\n  return dispatch => {\n    dispatch({\n      type: userConstants.SELECT_USER,\n      userId\n    });\n  };\n}\n\nfunction searchUser(query) {\n  return (dispatch, getState) => {\n    const all = getState().users.allUsers;\n    console.log('query = ' + query + \" , all = \" + JSON.stringify(all));\n\n    if (query && query != \"\") {\n      const q = query.split(\" \");\n      const filtered = all.filter(user => {\n        if (q[0] && user.email.includes(q[0])) {\n          return user;\n        }\n\n        if (q[1] && user.email.includes(q[1])) {\n          return user;\n        }\n\n        if (q[0] && user.firstName.includes(q[0])) {\n          return user;\n        }\n\n        if (q[1] && user.firstName.includes(q[1])) {\n          return user;\n        }\n\n        if (q[0] && user.lastName.includes(q[0])) {\n          return user;\n        }\n\n        if (q[1] && user.lastName.includes(q[1])) {\n          return user;\n        }\n      });\n      dispatch({\n        type: userConstants.FILTERED_USER,\n        user: filtered\n      });\n    } else {\n      dispatch({\n        type: userConstants.FILTERED_USER,\n        user: all\n      });\n    }\n  };\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return dispatch => {\n    dispatch(request(id));\n    userService.delete(id).then(user => dispatch(success(id)), error => dispatch(failure(id, error.toString())));\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","UserService","userActions","addUser","getAllUsers","selectUser","searchUser","delete","_delete","userService","data","dispatch","getState","token","authentication","then","result","success","user","error","failure","toString","request","type","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","getAllUser","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","userId","SELECT_USER","query","all","allUsers","console","log","JSON","stringify","q","split","filtered","filter","email","includes","firstName","lastName","FILTERED_USER","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\n\nimport UserService from '../services/UserService';\n\nexport const userActions = {\n    addUser,\n    getAllUsers,\n    selectUser,\n    searchUser,\n    delete: _delete\n};\n\nconst userService = new UserService()\n\n\nfunction addUser(data) {\n    return (dispatch, getState) => {\n        const {token} = getState().authentication;\n        //dispatch(request(data));\n\n        userService.addUser(data, token)\n            .then(\n                result => { \n                    //console.log(JSON.stringify(result))\n                    dispatch(success(result.data.user));\n                    \n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAllUsers() {\n    return (dispatch, getState) => {\n        dispatch(request());\n        const token = getState().authentication.token\n        userService.getAllUser(token)\n            .then(\n                \n                result => dispatch(success(result.data.users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { \n        return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\nfunction selectUser(userId) {\n    return (dispatch) => {\n        dispatch({ type: userConstants.SELECT_USER, userId });\n        \n    };\n    \n}\n\nfunction searchUser(query) {\n    return (dispatch, getState) => {\n        const all = getState().users.allUsers\n        console.log('query = ' + query + \" , all = \" + JSON.stringify(all))\n        if (query && query != \"\"){\n            const q = query.split(\" \")\n            const filtered = all.filter(user => {\n                if (q[0] && user.email.includes(q[0])){\n                    return user\n                }\n\n                if (q[1] && user.email.includes(q[1])){\n                    return user\n                }\n\n                if (q[0] && user.firstName.includes(q[0])){\n                    return user\n                }\n\n                if (q[1] && user.firstName.includes(q[1])){\n                    return user\n                }\n\n                if (q[0] && user.lastName.includes(q[0])){\n                    return user\n                }\n\n                if (q[1] && user.lastName.includes(q[1])){\n                    return user\n                }\n                    \n            })\n\n            dispatch({ type: userConstants.FILTERED_USER, user: filtered })\n\n        } else {\n\n            dispatch({ type: userConstants.FILTERED_USER, user: all })\n        }\n        \n    };\n    \n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}