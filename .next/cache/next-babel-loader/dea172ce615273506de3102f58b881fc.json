{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport { connect } from 'react-redux';\nimport styles from '../styles/Home.module.css';\nimport { userActions } from \"../actions\";\nimport { useEffect } from \"react\";\nimport { useForm, useWatch } from \"react-hook-form\";\n\nconst ChangePasswordPage = ({\n  changePassword,\n  changingPassword,\n  changeError,\n  error,\n  success,\n  pageProps\n}) => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = formData => {\n    changePassword(formData.password);\n  };\n\n  const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/;\n  const patternErrorMessage = \"Password must be minimum of 8 characters, with Uppercase, Lowercase and Symbol.\";\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Admin | Change Password\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(\"div\", {\n    className: \"content code\"\n  }, __jsx(\"p\", {\n    className: styles.description\n  }, \"Change Password\"), changeError && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, \" Error changing password\"))), Object.keys(errors).length != 0 && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, errors.password && __jsx(\"li\", null, \" \", errors.password.message, \" \"), errors.repassword && __jsx(\"li\", null, \" \", errors.repassword.message, \" \"))), __jsx(\"form\", {\n    className: \"pure-form pure-form-aligned\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"fieldset\", null, __jsx(\"div\", {\n    className: `pure-control-group ${errors.password && 'error-input'}`\n  }, __jsx(\"label\", {\n    htmlFor: \"password\"\n  }, \"Password\"), __jsx(\"input\", {\n    className: ` ${errors.password && 'error'}`,\n    type: \"password\",\n    ref: register({\n      required: true,\n      pattern: passwordPattern\n    }),\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Password\"\n  })), __jsx(\"div\", {\n    className: `pure-control-group ${errors.repassword && 'error-input'}`\n  }, __jsx(\"label\", {\n    htmlFor: \"repassword\"\n  }, \"Re-Password\"), __jsx(\"input\", {\n    className: ` ${errors.password && 'error'}`,\n    type: \"password\",\n    ref: register({\n      required: true,\n      pattern: {\n        value: passwordPattern,\n        message: patternErrorMessage\n      },\n      validate: value => value === watch(\"password\") || \"Passwords don't match\"\n    }),\n    name: \"repassword\",\n    id: \"repassword\",\n    placeholder: \"Re-Password\"\n  })), __jsx(\"div\", {\n    className: \"pure-controls\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"pure-button button-secondary\"\n  }, \"Submit\"))))));\n};\n\nconst mapStateToProps = state => ({\n  changeError: !state.authentication.passwordChangeSuccess && state.authentication.passwordChangeError,\n  error: state.authentication.passwordChangeError,\n  success: state.authentication.passwordChangeSuccess,\n  changingPassword: state.authentication.changingPassword\n});\n\nconst mapDispatchToProps = {\n  changePassword: userActions.changePassword\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePasswordPage);","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/pages/changePassword.js"],"names":["Head","connect","styles","userActions","useEffect","useForm","useWatch","ChangePasswordPage","changePassword","changingPassword","changeError","error","success","pageProps","register","handleSubmit","watch","errors","onSubmit","formData","password","passwordPattern","patternErrorMessage","description","Object","keys","length","message","repassword","required","pattern","value","validate","mapStateToProps","state","authentication","passwordChangeSuccess","passwordChangeError","mapDispatchToProps"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport { connect } from 'react-redux';\nimport styles from '../styles/Home.module.css'\nimport { userActions } from \"../actions\";\nimport { useEffect } from \"react\";\nimport { useForm, useWatch } from \"react-hook-form\";\n\nconst ChangePasswordPage = ({changePassword,changingPassword, changeError ,error, success, pageProps}) => {\n  const {register, handleSubmit, watch, errors} = useForm();\n  const onSubmit = formData => {\n    changePassword(formData.password);\n\n  }\n\n  \n  const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/\n  const patternErrorMessage = \"Password must be minimum of 8 characters, with Uppercase, Lowercase and Symbol.\"\n  return (\n    \n    <>\n      <Head>\n        <title>Admin | Change Password</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n        \n          <div  className=\"content code\">\n            <p className={styles.description}>Change Password</p>\n            { changeError && <div className=\"panel code error-msg\">\n                  <ul>\n                    <li> Error changing password</li>    \n                  </ul>\n                   \n                </div>\n\n            }\n            { Object.keys(errors).length != 0 && \n                <div className=\"panel code error-msg\">\n                  <ul>\n                    {errors.password && <li> {errors.password.message} </li> }\n                    {errors.repassword && <li> {errors.repassword.message} </li> }\n                    \n                  </ul>\n                   \n                </div>\n            }\n            \n            <form className=\"pure-form pure-form-aligned\" onSubmit={handleSubmit(onSubmit)}>\n            <fieldset>\n                \n                \n                \n                <div className={`pure-control-group ${errors.password && 'error-input'}`}>\n                    <label htmlFor=\"password\">Password</label>\n                    <input className={` ${errors.password && 'error'}`} \n                    type=\"password\" ref={register({required:true, \n                      pattern:passwordPattern\n                    })} \n                    name=\"password\" id=\"password\" placeholder=\"Password\" />\n                </div>\n\n                <div className={`pure-control-group ${errors.repassword && 'error-input'}`}>\n                    <label htmlFor=\"repassword\">Re-Password</label>\n                    <input className={` ${errors.password && 'error'}`} \n                    type=\"password\" ref={register({required:true, \n                      pattern:{\n                        value:passwordPattern,\n                        message:patternErrorMessage\n\n                      },\n                      validate: (value) => value === watch(\"password\") || \"Passwords don't match\"\n                    })} \n                    name=\"repassword\" id=\"repassword\" placeholder=\"Re-Password\" />\n                </div>\n                \n                <div className=\"pure-controls\">\n                    \n                    <button type=\"submit\" className=\"pure-button button-secondary\">Submit</button>\n                    \n                </div>\n            </fieldset>\n          </form>\n          </div>\n\n          \n        \n      \n\n    </>\n  )\n}\n\n\n\nconst mapStateToProps = state => ({\n  changeError: !state.authentication.passwordChangeSuccess && state.authentication.passwordChangeError,\n  error: state.authentication.passwordChangeError,\n  success: state.authentication.passwordChangeSuccess,\n  changingPassword: state.authentication.changingPassword,\n});\n\nconst mapDispatchToProps = {\n  changePassword: userActions.changePassword,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePasswordPage) "]},"metadata":{},"sourceType":"module"}