{"ast":null,"code":"import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService'; // import { alertActions } from './';\n\nimport Router from 'next/router';\nexport var userActions = {\n  login: login,\n  logout: logout,\n  loggedIn: loggedIn,\n  register: register,\n  getAll: getAll,\n  \"delete\": _delete\n};\nvar auth = new AuthService();\n\nfunction login(email, password) {\n  //console.log(\"Called Me!\")\n  return function (dispatch, getState) {\n    console.log(getState());\n    dispatch(request({\n      email: email\n    }));\n    auth.loginAdmin(email, password).then(function (result) {\n      var payload = result.data;\n      dispatch(success(payload));\n      Router.push('/home');\n    }, function (error) {\n      console.log(error.toString());\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user: user\n    };\n  }\n\n  function success(payload) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      payload: payload\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction loggedIn() {\n  return function (dispatch) {\n    dispatch(request());\n    dispatch(success(auth.loggedIn()));\n  };\n\n  function request() {\n    return {\n      type: userConstants.TOKEN_REQUEST\n    };\n  }\n\n  function success(status) {\n    return {\n      type: userConstants.TOKEN_SUCCESS,\n      status: status\n    };\n  }\n}\n\nfunction logout() {\n  auth.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return function (dispatch) {\n    dispatch(request(user));\n    auth.register(user).then(function (user) {\n      dispatch(success());\n      Router.push('/login'); // dispatch(alertActions.success('Registration successful'));\n    }, function (error) {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction getAll() {\n  return function (dispatch) {\n    dispatch(request());\n    auth.getAll().then(function (users) {\n      return dispatch(success(users));\n    }, function (error) {\n      return dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users: users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error: error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return function (dispatch) {\n    dispatch(request(id));\n    auth[\"delete\"](id).then(function (user) {\n      return dispatch(success(id));\n    }, function (error) {\n      return dispatch(failure(id, error.toString()));\n    });\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id: id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id: id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id: id,\n      error: error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","AuthService","Router","userActions","login","logout","loggedIn","register","getAll","_delete","auth","email","password","dispatch","getState","console","log","request","loginAdmin","then","result","payload","data","success","push","error","toString","failure","user","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","TOKEN_REQUEST","status","TOKEN_SUCCESS","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService';\n// import { alertActions } from './';\nimport Router from 'next/router';\n\nexport const userActions = {\n    login,\n    logout,\n    loggedIn,\n    register,\n    getAll,\n    delete: _delete\n};\n\nconst auth = new AuthService()\n\n\n\nfunction login(email, password) {\n    //console.log(\"Called Me!\")\n    return (dispatch, getState) => {\n        console.log(getState())\n        dispatch(request({ email }));\n\n        auth.loginAdmin(email, password)\n            .then(\n                result => { \n                    const payload = result.data\n                    dispatch(success(payload));\n                    Router.push('/home');\n                },\n                error => {\n                    console.log(error.toString())\n                    dispatch(failure(error.toString()));\n                    \n                }\n            );\n    };\n\n    \n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(payload) { return { type: userConstants.LOGIN_SUCCESS, payload } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n\n\n\n\n\n\n\n\n\n\n}\n\nfunction loggedIn() {\n    return dispatch => {\n        dispatch(request());\n        dispatch(success(auth.loggedIn()));\n    };\n    function request() { return { type: userConstants.TOKEN_REQUEST } }\n    function success(status) { return { type: userConstants.TOKEN_SUCCESS, status } }\n}\n\n\n\nfunction logout() {\n    auth.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        auth.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    Router.push('/login');\n                    // dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        auth.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        auth.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}