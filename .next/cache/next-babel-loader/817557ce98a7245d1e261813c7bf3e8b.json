{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { userActions } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { pattern, errorMessage } from '../constants';\nimport Papa from \"papaparse\";\n\nvar UploadReportModal = function UploadReportModal(_ref) {\n  _s();\n\n  var children = _ref.children,\n      pageProps = _ref.pageProps,\n      addUserError = _ref.addUserError,\n      addUser = _ref.addUser,\n      selectedUser = _ref.selectedUser,\n      lastAdded = _ref.lastAdded;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      reset = _useForm.reset,\n      errors = _useForm.errors;\n\n  var parseCsv = function parseCsv(data) {\n    var parsedata = [];\n    var newLinebrk = data.split(\"\\n\");\n\n    for (var i = 0; i < newLinebrk.length; i++) {\n      parsedata.push(newLinebrk[i].split(\",\"));\n    }\n\n    var header = parsedata[0];\n    var records = parsedata.slice(1, -2);\n    console.log(records);\n    return parsedata;\n  };\n\n  var onSubmit = function onSubmit(formData) {\n    var file = formData.selectedFile[0];\n    var data = null;\n    Papa.parse(file, {\n      //header:true,\n      complete: function complete(result) {\n        //data = result.data\n        console.log(result.data);\n      }\n    });\n    console.log(data); //addUser(formData);\n    // if (!addUserError){\n    //     reset()\n    // }\n  };\n\n  return __jsx(\"div\", {\n    id: \"uploadReportModal\",\n    className: \"modal\"\n  }, __jsx(\"div\", {\n    className: \"modal-content\"\n  }, __jsx(\"span\", {\n    className: \"close\",\n    \"data-type\": \"hide-modal\",\n    \"data-target\": \"uploadReportModal\"\n  }, \"\\xD7\"), selectedUser && __jsx(\"h3\", null, \"Upload a report for \", __jsx(\"span\", {\n    className: \"blue\"\n  }, selectedUser.firstName + \" \" + selectedUser.lastName)), __jsx(\"hr\", {\n    className: \"divider\"\n  }), lastAdded && !addUserError && Object.keys(errors).length == 0 && __jsx(\"div\", {\n    className: \"panel code\"\n  }, __jsx(\"h4\", {\n    className: \"success\"\n  }, \" LAST RECORD: \", lastAdded.firstName + \" \" + lastAdded.lastName)), addUserError && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, \" \", error))), Object.keys(errors).length != 0 && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, errors.firstName && __jsx(\"li\", null, \" \", errors.firstName.message, \" \"), errors.lastName && __jsx(\"li\", null, \" \", errors.lastName.message, \" \"), errors.email && __jsx(\"li\", null, \" \", errors.email.message), errors.phoneNumber && __jsx(\"li\", null, \" \", errors.phoneNumber.message, \" \"))), __jsx(\"form\", {\n    className: \"pure-form pure-form-stacked\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"fieldset\", null, __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"selectedFile\"\n  }, \"Select file\"), __jsx(\"input\", {\n    name: \"selectedFile\",\n    required: true,\n    type: \"file\",\n    id: \"selectedFile\",\n    placeholder: \"choose report file (csv)\",\n    ref: register\n  })), __jsx(\"br\", null), __jsx(\"div\", {\n    className: \"pure-controls\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"pure-button button-secondary\"\n  }, \"Submit\"))))));\n};\n\n_s(UploadReportModal, \"NZvb3w7fZeCHPRzMNHe38sEWX9M=\", false, function () {\n  return [useForm];\n});\n\n_c = UploadReportModal;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    addUserError: state.users.addUserError,\n    lastAdded: state.users.lastAdded,\n    selectedUser: state.users.selectedUser\n  };\n};\n\nvar mapDispatchToProps = {\n  addUser: userActions.addUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadReportModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadReportModal\");","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/components/uploadReportModal.js"],"names":["Link","userActions","connect","useForm","pattern","errorMessage","Papa","UploadReportModal","children","pageProps","addUserError","addUser","selectedUser","lastAdded","register","handleSubmit","reset","errors","parseCsv","data","parsedata","newLinebrk","split","i","length","push","header","records","slice","console","log","onSubmit","formData","file","selectedFile","parse","complete","result","firstName","lastName","Object","keys","error","message","email","phoneNumber","mapStateToProps","state","users","mapDispatchToProps"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\nimport { userActions } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { pattern, errorMessage } from '../constants';\nimport Papa from \"papaparse\"\n\nconst UploadReportModal = ({children, pageProps,addUserError, addUser,selectedUser, lastAdded}) => {\n    const {register, handleSubmit,reset, errors} = useForm();\n    const parseCsv = (data) => {\n        \n        let parsedata = [];\n\n        let newLinebrk = data.split(\"\\n\");\n\n        for(let i = 0; i < newLinebrk.length; i++) {\n\n            parsedata.push(newLinebrk[i].split(\",\"))\n            \n        }\n\n        const header = parsedata[0]\n        const records = parsedata.slice(1, -2)\n        console.log(records)\n\n        return parsedata\n    }\n\n    const onSubmit = formData => {\n        const file = formData.selectedFile[0]\n\n        let data = null;\n \n        Papa.parse(file, {\n            //header:true,\n            \n            complete: result => {\n                //data = result.data\n                console.log(result.data)\n            }\n        })\n        \n        console.log(data)\n\n        \n        //addUser(formData);\n\n        \n        // if (!addUserError){\n        //     reset()\n            \n        // }\n            \n\n    }\n    return <div id=\"uploadReportModal\" className=\"modal\">\n         \n        <div className=\"modal-content\">\n            <span className=\"close\" data-type=\"hide-modal\" data-target=\"uploadReportModal\">&times;</span>\n            {selectedUser && <h3>Upload a report for <span className=\"blue\">{selectedUser.firstName + \" \" + selectedUser.lastName}</span></h3> }\n            <hr className=\"divider\"/>\n            {lastAdded && !addUserError && (Object.keys(errors).length == 0) && <div className=\"panel code\">\n            <h4 className=\"success\"> LAST RECORD: {lastAdded.firstName + \" \" + lastAdded.lastName}</h4>\n                </div>\n            }\n            { addUserError && <div className=\"panel code error-msg\">\n                  <ul>\n                    <li> {error}</li>    \n                  </ul>\n                   \n                </div>\n\n            }\n            { Object.keys(errors).length != 0 && \n                <div className=\"panel code error-msg\">\n                  <ul>\n                    \n                    {errors.firstName && <li> {errors.firstName.message} </li> }\n                    {errors.lastName && <li> {errors.lastName.message} </li> }\n    \n                    {errors.email && <li> {errors.email.message}</li> }\n                    {errors.phoneNumber && <li> {errors.phoneNumber.message} </li> }\n                    \n                  </ul>\n                   \n                </div>\n            }\n            \n            <form className=\"pure-form pure-form-stacked\" onSubmit={handleSubmit(onSubmit)}>\n              <fieldset>\n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"selectedFile\">Select file</label>\n                      <input name=\"selectedFile\" required={true} type=\"file\" id=\"selectedFile\" placeholder=\"choose report file (csv)\" ref={register} />\n                  </div>\n                  <br/>\n                  \n                  <div className=\"pure-controls\">\n                      <button type=\"submit\" className=\"pure-button button-secondary\">Submit</button>\n                  </div>\n                </fieldset>\n              </form>\n          \n            \n        </div>\n    </div>\n}\n\n\nconst mapStateToProps = state => ({\n    addUserError: state.users.addUserError,\n    lastAdded: state.users.lastAdded,\n    selectedUser: state.users.selectedUser\n  });\n\nconst mapDispatchToProps = {\n    addUser: userActions.addUser\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(UploadReportModal) \n"]},"metadata":{},"sourceType":"module"}