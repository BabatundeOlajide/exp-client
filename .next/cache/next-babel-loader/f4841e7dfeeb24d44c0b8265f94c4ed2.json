{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport \"../styles/pure/pure-min.css\";\nimport \"../styles/pure/grids-responsive-min.css\";\nimport \"../styles/pure/main-grid.css\";\nimport \"../styles/pure/main.css\";\nimport \"../styles/globals.css\";\nimport AdminLayout from \"../components/layouts/adminLayout\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport withReduxStore from \"../lib/with-redux-store\";\nimport App, { Container } from 'next/app';\nimport { userConstants } from '../constants';\nimport { userActions } from \"../actions\";\nimport fetch from \"isomorphic-unfetch\";\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      reduxStore = _ref.reduxStore,\n      persistor = _ref.persistor;\n  var Layout = Component.Layout || AdminLayout;\n  return __jsx(React.Fragment, null, __jsx(Provider, {\n    store: reduxStore\n  }, __jsx(PersistGate, {\n    loading: null,\n    persistor: persistor\n  }, __jsx(Layout, pageProps, __jsx(Component, pageProps)))), __jsx(\"script\", {\n    type: \"text/javascript\",\n    src: \"/js/menu.js\"\n  }), __jsx(\"script\", {\n    type: \"text/javascript\",\n    src: \"/js/ui.js\"\n  }), __jsx(\"script\", {\n    type: \"text/javascript\",\n    src: \"/js/grid.js\"\n  }));\n}\n\n_c = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var currentUser, token, appProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //const currentUser = await getCurrentUser(); // define this beforehand\n            currentUser = true;\n            _context.next = 3;\n            return fetch();\n\n          case 3:\n            token = _context.sent;\n            appContext.ctx.reduxStore.dispatch(userActions.defaultUser(\"babatunde\", \"obabs78@gmail.com\"));\n            _context.next = 7;\n            return App.getInitialProps(appContext);\n\n          case 7:\n            appProps = _context.sent;\n\n            // check that we are in SSR mode (NOT static and NOT client-side)\n            if (false && appContext.ctx.res.writeHead) {\n              if (currentUser && appContext.router.pathname !== '/home') {\n                appContext.ctx.res.writeHead(302, {\n                  Location: \"/home\"\n                });\n                appContext.ctx.res.end();\n              }\n            }\n\n            return _context.abrupt(\"return\", _objectSpread({}, appProps));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default _c2 = withReduxStore(MyApp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/pages/_app.js"],"names":["AdminLayout","Provider","PersistGate","withReduxStore","App","Container","userConstants","userActions","fetch","MyApp","Component","pageProps","reduxStore","persistor","Layout","getInitialProps","appContext","currentUser","token","ctx","dispatch","defaultUser","appProps","res","writeHead","router","pathname","Location","end"],"mappings":";;;;;;;;;;AAEA,OAAO,6BAAP;AACA,OAAO,yCAAP;AACA,OAAO,8BAAP;AACA,OAAO,yBAAP;AAEA,OAAO,uBAAP;AAIA,OAAOA,WAAP,MAAwB,mCAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,GAAP,IAAaC,SAAb,QAA6B,UAA7B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,SAASC,KAAT,OAAgE;AAAA,MAA/CC,SAA+C,QAA/CA,SAA+C;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,MAAzBC,UAAyB,QAAzBA,UAAyB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AAC9D,MAAMC,MAAM,GAAGJ,SAAS,CAACI,MAAV,IAAoBd,WAAnC;AAGA,SACE,4BACA,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEY;AAAjB,KACE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE,IAAtB;AAA4B,IAAA,SAAS,EAAEC;AAAvC,KACE,MAAC,MAAD,EAAYF,SAAZ,EACE,MAAC,SAAD,EAAeA,SAAf,CADF,CADF,CADF,CADA,EASE;AAAQ,IAAA,IAAI,EAAC,iBAAb;AAA+B,IAAA,GAAG,EAAC;AAAnC,IATF,EAUE;AAAQ,IAAA,IAAI,EAAC,iBAAb;AAA+B,IAAA,GAAG,EAAC;AAAnC,IAVF,EAWE;AAAQ,IAAA,IAAI,EAAC,iBAAb;AAA+B,IAAA,GAAG,EAAC;AAAnC,IAXF,CADF;AAeD;;KAnBQF,K;;AAqBTA,KAAK,CAACM,eAAN;AAAA,uEAAwB,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB;AACMC,YAAAA,WAFc,GAEA,IAFA;AAAA;AAAA,mBAGAT,KAAK,EAHL;;AAAA;AAGdU,YAAAA,KAHc;AAIpBF,YAAAA,UAAU,CAACG,GAAX,CAAeP,UAAf,CAA0BQ,QAA1B,CAAmCb,WAAW,CAACc,WAAZ,CAAwB,WAAxB,EAAqC,mBAArC,CAAnC;AAJoB;AAAA,mBAKGjB,GAAG,CAACW,eAAJ,CAAoBC,UAApB,CALH;;AAAA;AAKdM,YAAAA,QALc;;AAMpB;AACA,gBAAI,SAAiCN,UAAU,CAACG,GAAX,CAAeI,GAAf,CAAmBC,SAAxD,EAAmE;AACjE,kBAAIP,WAAW,IAAID,UAAU,CAACS,MAAX,CAAkBC,QAAlB,KAA+B,OAAlD,EAA2D;AACvDV,gBAAAA,UAAU,CAACG,GAAX,CAAeI,GAAf,CAAmBC,SAAnB,CAA6B,GAA7B,EAAkC;AAAEG,kBAAAA,QAAQ,EAAE;AAAZ,iBAAlC;AACAX,gBAAAA,UAAU,CAACG,GAAX,CAAeI,GAAf,CAAmBK,GAAnB;AACH;AACF;;AAZmB,+DAaRN,QAbQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAgBA,qBAAenB,cAAc,CAACM,KAAD,CAA7B","sourcesContent":["\n\nimport \"../styles/pure/pure-min.css\"\nimport \"../styles/pure/grids-responsive-min.css\"\nimport \"../styles/pure/main-grid.css\"\nimport \"../styles/pure/main.css\"\n\nimport \"../styles/globals.css\"\n\n\n\nimport AdminLayout from \"../components/layouts/adminLayout\";\nimport { Provider } from \"react-redux\"\nimport { PersistGate } from \"redux-persist/integration/react\"\nimport withReduxStore from \"../lib/with-redux-store\";\nimport App, {Container} from 'next/app'\nimport { userConstants } from '../constants';\nimport { userActions } from \"../actions\"\nimport fetch from \"isomorphic-unfetch\";\nfunction MyApp({ Component, pageProps, reduxStore, persistor }) {\n  const Layout = Component.Layout || AdminLayout;\n  \n \n  return (\n    <>\n    <Provider store={reduxStore}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Layout {...pageProps}>\n          <Component {...pageProps} />\n        </Layout>\n      </PersistGate>\n    </Provider>\n      \n      <script type=\"text/javascript\" src=\"/js/menu.js\" />\n      <script type=\"text/javascript\" src=\"/js/ui.js\" />\n      <script type=\"text/javascript\" src=\"/js/grid.js\" />\n    </>\n  )\n}\n\nMyApp.getInitialProps = async (appContext) => {\n    //const currentUser = await getCurrentUser(); // define this beforehand\n    const currentUser = true\n    const token = await fetch()\n    appContext.ctx.reduxStore.dispatch(userActions.defaultUser(\"babatunde\", \"obabs78@gmail.com\"))\n    const appProps = await App.getInitialProps(appContext);\n    // check that we are in SSR mode (NOT static and NOT client-side)\n    if (typeof window === \"undefined\" && appContext.ctx.res.writeHead) {\n      if (currentUser && appContext.router.pathname !== '/home') {\n          appContext.ctx.res.writeHead(302, { Location: \"/home\" });\n          appContext.ctx.res.end();\n      }\n    }\n    return { ...appProps};\n}\n\nexport default withReduxStore(MyApp)\n"]},"metadata":{},"sourceType":"module"}