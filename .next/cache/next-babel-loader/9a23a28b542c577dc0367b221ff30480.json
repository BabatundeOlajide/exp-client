{"ast":null,"code":"import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService'; // import { alertActions } from './';\n\nimport Router from 'next/router';\nexport const userActions = {\n  login,\n  logout,\n  loggedIn,\n  register,\n  getAll,\n  delete: _delete\n};\nconst auth = new AuthService();\n\nfunction login(email, password) {\n  //console.log(\"Called Me!\")\n  return dispatch => {\n    dispatch(request({\n      email\n    }));\n    auth.loginAdmin(email, password).then(result => {\n      const payload = result.data;\n      dispatch(success(payload));\n      Router.push('/home');\n    }, error => {\n      console.log(error.toString());\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(payload) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      payload\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction loggedIn() {\n  return dispatch => {\n    dispatch(request());\n    dispatch(success(auth.loggedIn()));\n  };\n\n  function request() {\n    return {\n      type: userConstants.TOKEN_REQUEST\n    };\n  }\n\n  function success(status) {\n    return {\n      type: userConstants.TOKEN_SUCCESS,\n      status\n    };\n  }\n}\n\nfunction logout() {\n  auth.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    auth.register(user).then(user => {\n      dispatch(success());\n      Router.push('/login'); // dispatch(alertActions.success('Registration successful'));\n    }, error => {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    auth.getAll().then(users => dispatch(success(users)), error => dispatch(failure(error.toString())));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return dispatch => {\n    dispatch(request(id));\n    auth.delete(id).then(user => dispatch(success(id)), error => dispatch(failure(id, error.toString())));\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","AuthService","Router","userActions","login","logout","loggedIn","register","getAll","delete","_delete","auth","email","password","dispatch","request","loginAdmin","then","result","payload","data","success","push","error","console","log","toString","failure","user","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","TOKEN_REQUEST","status","TOKEN_SUCCESS","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService';\n// import { alertActions } from './';\nimport Router from 'next/router';\n\nexport const userActions = {\n    login,\n    logout,\n    loggedIn,\n    register,\n    getAll,\n    delete: _delete\n};\n\nconst auth = new AuthService()\n\n\n\nfunction login(email, password) {\n    //console.log(\"Called Me!\")\n    return (dispatch) => {\n        \n        dispatch(request({ email }));\n\n        auth.loginAdmin(email, password)\n            .then(\n                result => { \n                    const payload = result.data\n                    dispatch(success(payload));\n                    Router.push('/home');\n                },\n                error => {\n                    console.log(error.toString())\n                    dispatch(failure(error.toString()));\n                    \n                }\n            );\n    };\n\n    \n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(payload) { return { type: userConstants.LOGIN_SUCCESS, payload } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n\n\n\n\n\n\n\n\n\n\n}\n\nfunction loggedIn() {\n    return dispatch => {\n        dispatch(request());\n        dispatch(success(auth.loggedIn()));\n    };\n    function request() { return { type: userConstants.TOKEN_REQUEST } }\n    function success(status) { return { type: userConstants.TOKEN_SUCCESS, status } }\n}\n\n\n\nfunction logout() {\n    auth.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        auth.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    Router.push('/login');\n                    // dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        auth.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        auth.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}