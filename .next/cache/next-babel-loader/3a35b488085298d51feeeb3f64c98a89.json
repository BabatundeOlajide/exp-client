{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport LoginLayout from '../components/layouts/loginLayout';\nimport Link from 'next/link';\nimport { useForm } from \"react-hook-form\";\nimport { connect } from 'react-redux';\nimport { userActions } from \"../actions\";\nimport Router from \"next/router\";\nimport { useEffect } from 'react';\n\nvar LoginPage = function LoginPage(_ref) {\n  _s();\n\n  var loginError = _ref.loginError,\n      error = _ref.error,\n      login = _ref.login,\n      pageProps = _ref.pageProps;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(formData) {\n    login(formData.email, formData.password);\n  };\n\n  useEffect(function () {});\n  var emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  var passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Admin | Login\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(\"div\", {\n    className: \"content code\"\n  }, __jsx(\"p\", {\n    className: styles.description\n  }, \"Administrative login\"), loginError && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, \" Invalid Login\"))), Object.keys(errors).length != 0 && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, errors.email && __jsx(\"li\", null, \" Invalid Email Address\"), errors.password && __jsx(\"li\", null, \" Password must be minimum of 8 characters, with Uppercase, Lowercase and Symbol. \"))), __jsx(\"form\", {\n    className: \"pure-form pure-form-aligned\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"fieldset\", null, __jsx(\"div\", {\n    className: \"pure-control-group \".concat(errors.email && 'error-input')\n  }, __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email Address\"), __jsx(\"input\", {\n    type: \"email\",\n    ref: register({\n      required: true,\n      pattern: emailPattern\n    }),\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"Email Address\"\n  })), __jsx(\"div\", {\n    className: \"pure-control-group \".concat(errors.password && 'error-input')\n  }, __jsx(\"label\", {\n    htmlFor: \"password\"\n  }, \"Password\"), __jsx(\"input\", {\n    className: \" \".concat(errors.password && 'error'),\n    type: \"password\",\n    ref: register({\n      required: true,\n      pattern: passwordPattern\n    }),\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Password\"\n  })), __jsx(\"div\", {\n    className: \"pure-controls\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"pure-button button-secondary\"\n  }, \"Submit\"))))));\n};\n\n_s(LoginPage, \"gjCPXZIqi3zyDJihlEh7b1DV7HE=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginPage;\nLoginPage.Layout = LoginLayout;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loginError: !state.authentication.loggedIn && state.authentication.error,\n    error: state.authentication.error\n  };\n};\n\nvar mapDispatchToProps = {\n  login: userActions.login\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/pages/index.js"],"names":["Head","styles","LoginLayout","Link","useForm","connect","userActions","Router","useEffect","LoginPage","loginError","error","login","pageProps","register","handleSubmit","errors","onSubmit","formData","email","password","emailPattern","passwordPattern","description","Object","keys","length","required","pattern","Layout","mapStateToProps","state","authentication","loggedIn","mapDispatchToProps"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport styles from '../styles/Home.module.css'\nimport LoginLayout from '../components/layouts/loginLayout'\nimport Link from 'next/link'\nimport { useForm } from \"react-hook-form\";\nimport { connect } from 'react-redux';\nimport { userActions } from \"../actions\";\nimport Router from \"next/router\"\nimport { useEffect } from 'react';\n\nconst LoginPage = ({loginError,error, login, pageProps}) => {\n  const {register, handleSubmit, errors} = useForm();\n  const onSubmit = formData => {\n    login(formData.email, formData.password);\n\n  }\n\n  useEffect(()=>{\n\n  },)\n  const emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/\n\n  return (\n    \n    <>\n      <Head>\n        <title>Admin | Login</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n        \n          <div  className=\"content code\">\n            <p className={styles.description}>Administrative login</p>\n            { loginError && <div className=\"panel code error-msg\">\n                  <ul>\n                    <li> Invalid Login</li>    \n                  </ul>\n                   \n                </div>\n\n            }\n            { Object.keys(errors).length != 0 && \n                <div className=\"panel code error-msg\">\n                  <ul>\n                    {errors.email && <li> Invalid Email Address</li> }\n                    {errors.password && <li> Password must be minimum of 8 characters, with Uppercase, Lowercase and Symbol. </li> }\n                    \n                  </ul>\n                   \n                </div>\n            }\n            \n            <form className=\"pure-form pure-form-aligned\" onSubmit={handleSubmit(onSubmit)}>\n            <fieldset>\n                \n                \n                <div className={`pure-control-group ${errors.email && 'error-input'}`} >\n                    <label htmlFor=\"email\">Email Address</label>\n                    <input \n                    type=\"email\" ref={register({required:true, pattern:emailPattern})} \n                    name=\"email\" id=\"email\" placeholder=\"Email Address\" />\n                    {/*<span className=\"pure-form-message-inline\">This is a required field.</span>*/}\n                </div>\n\n                <div className={`pure-control-group ${errors.password && 'error-input'}`}>\n                    <label htmlFor=\"password\">Password</label>\n                    <input className={` ${errors.password && 'error'}`} \n                    type=\"password\" ref={register({required:true, pattern:passwordPattern})} \n                    name=\"password\" id=\"password\" placeholder=\"Password\" />\n                </div>\n                \n                <div className=\"pure-controls\">\n                    \n                    <button type=\"submit\" className=\"pure-button button-secondary\">Submit</button>\n                    \n                </div>\n            </fieldset>\n          </form>\n          </div>\n\n          \n        \n      \n\n    </>\n  )\n}\n\n\n\nLoginPage.Layout = LoginLayout\n\nconst mapStateToProps = state => ({\n  loginError: !state.authentication.loggedIn && state.authentication.error,\n  error: state.authentication.error\n});\n\nconst mapDispatchToProps = {\n  login: userActions.login\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage) "]},"metadata":{},"sourceType":"module"}