{"ast":null,"code":"import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService'; // import { alertActions } from './';\n\nimport Router from 'next/router';\nexport var userActions = {\n  login: login,\n  logout: logout,\n  loggedIn: loggedIn,\n  register: register,\n  getAll: getAll,\n  \"delete\": _delete\n};\nvar auth = new AuthService();\n\nfunction defaultUser(name, email) {\n  return {\n    user: user\n  };\n}\n\nfunction login(email, password) {\n  //console.log(\"Called Me!\")\n  return function (dispatch) {\n    dispatch(request({\n      email: email\n    }));\n    auth.login(email, password).then(function (user) {\n      dispatch(success(user));\n      Router.push('/home');\n    }, function (error) {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction loggedIn() {\n  return function (dispatch) {\n    dispatch(request());\n    dispatch(success(auth.loggedIn()));\n  };\n\n  function request() {\n    return {\n      type: userConstants.TOKEN_REQUEST\n    };\n  }\n\n  function success(status) {\n    return {\n      type: userConstants.TOKEN_SUCCESS,\n      status: status\n    };\n  }\n}\n\nfunction logout() {\n  auth.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return function (dispatch) {\n    dispatch(request(user));\n    auth.register(user).then(function (user) {\n      dispatch(success());\n      Router.push('/login'); // dispatch(alertActions.success('Registration successful'));\n    }, function (error) {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction getAll() {\n  return function (dispatch) {\n    dispatch(request());\n    auth.getAll().then(function (users) {\n      return dispatch(success(users));\n    }, function (error) {\n      return dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users: users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error: error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return function (dispatch) {\n    dispatch(request(id));\n    auth[\"delete\"](id).then(function (user) {\n      return dispatch(success(id));\n    }, function (error) {\n      return dispatch(failure(id, error.toString()));\n    });\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id: id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id: id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id: id,\n      error: error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","AuthService","Router","userActions","login","logout","loggedIn","register","getAll","_delete","auth","defaultUser","name","email","user","password","dispatch","request","then","success","push","error","failure","toString","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","TOKEN_REQUEST","status","TOKEN_SUCCESS","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService';\n// import { alertActions } from './';\nimport Router from 'next/router';\n\nexport const userActions = {\n    login,\n    logout,\n    loggedIn,\n    register,\n    getAll,\n    delete: _delete\n};\n\nconst auth = new AuthService()\n\nfunction defaultUser(name, email){\n    return {user}\n}\nfunction login(email, password) {\n    //console.log(\"Called Me!\")\n    return dispatch => {\n        dispatch(request({ email }));\n\n        auth.login(email, password)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    Router.push('/home');\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction loggedIn() {\n    return dispatch => {\n        dispatch(request());\n        dispatch(success(auth.loggedIn()));\n    };\n    function request() { return { type: userConstants.TOKEN_REQUEST } }\n    function success(status) { return { type: userConstants.TOKEN_SUCCESS, status } }\n}\n\nfunction logout() {\n    auth.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        auth.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    Router.push('/login');\n                    // dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        auth.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        auth.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}