{"ast":null,"code":"import { userConstants } from '../constants';\nimport AuthService from '../utils/AuthService'; // import { alertActions } from './';\n\nimport Router from 'next/router';\nexport const userActions = {\n  login,\n  logout,\n  loggedIn,\n  register,\n  getAll,\n  delete: _delete\n};\nconst auth = new AuthService('http://localhost');\n\nfunction login(username, password) {\n  console.log;\n  return dispatch => {\n    dispatch(request({\n      username\n    }));\n    auth.login(username, password).then(user => {\n      dispatch(success(user));\n      Router.push('/dashboard');\n    }, error => {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction loggedIn() {\n  return dispatch => {\n    dispatch(request());\n    dispatch(success(auth.loggedIn()));\n  };\n\n  function request() {\n    return {\n      type: userConstants.TOKEN_REQUEST\n    };\n  }\n\n  function success(status) {\n    return {\n      type: userConstants.TOKEN_SUCCESS,\n      status\n    };\n  }\n}\n\nfunction logout() {\n  auth.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    auth.register(user).then(user => {\n      dispatch(success());\n      Router.push('/login'); // dispatch(alertActions.success('Registration successful'));\n    }, error => {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    auth.getAll().then(users => dispatch(success(users)), error => dispatch(failure(error.toString())));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return dispatch => {\n    dispatch(request(id));\n    auth.delete(id).then(user => dispatch(success(id)), error => dispatch(failure(id, error.toString())));\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","AuthService","Router","userActions","login","logout","loggedIn","register","getAll","delete","_delete","auth","username","password","console","log","dispatch","request","then","user","success","push","error","failure","toString","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","TOKEN_REQUEST","status","TOKEN_SUCCESS","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\nimport AuthService from '../utils/AuthService';\n// import { alertActions } from './';\nimport Router from 'next/router';\n\nexport const userActions = {\n    login,\n    logout,\n    loggedIn,\n    register,\n    getAll,\n    delete: _delete\n};\n\nconst auth = new AuthService('http://localhost')\n\n\nfunction login(username, password) {\n    console.log\n    return dispatch => {\n        dispatch(request({ username }));\n\n        auth.login(username, password)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    Router.push('/dashboard');\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction loggedIn() {\n    return dispatch => {\n        dispatch(request());\n        dispatch(success(auth.loggedIn()));\n    };\n    function request() { return { type: userConstants.TOKEN_REQUEST } }\n    function success(status) { return { type: userConstants.TOKEN_SUCCESS, status } }\n}\n\nfunction logout() {\n    auth.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        auth.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    Router.push('/login');\n                    // dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        auth.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        auth.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}