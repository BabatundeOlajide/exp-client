{"ast":null,"code":"import express from \"express\";\nimport next from \"next\";\nimport \"dotenv/config\";\nconst PORT = parseInt(process.env.PORT) || 3000;\nconst HOST = process.env.HOST || \"http://localhost\";\nconst dev = true;\nconst app = next({\n  dev\n});\nconst handle = app.getRequestHandler();\napp.prepare().then(() => {\n  const server = express();\n  server.get(\"*\", (req, res) => {\n    return handle(req, res);\n  });\n  server.listen(PORT, error => {\n    if (error) throw error;\n    console.log(`> Client listening on ${HOST}:${PORT}`);\n  });\n});","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/index.js"],"names":["express","next","PORT","parseInt","process","env","HOST","dev","app","handle","getRequestHandler","prepare","then","server","get","req","res","listen","error","console","log"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,eAAP;AAEA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYH,IAAb,CAAR,IAA8B,IAA3C;AACA,MAAMI,IAAI,GAAGF,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,kBAAjC;AACA,MAAMC,GAAG,OAAT;AACA,MAAMC,GAAG,GAAGP,IAAI,CAAC;AAACM,EAAAA;AAAD,CAAD,CAAhB;AACA,MAAME,MAAM,GAAGD,GAAG,CAACE,iBAAJ,EAAf;AAEAF,GAAG,CAACG,OAAJ,GAAcC,IAAd,CAAmB,MAAM;AACrB,QAAMC,MAAM,GAAGb,OAAO,EAAtB;AACAa,EAAAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC1B,WAAOP,MAAM,CAACM,GAAD,EAAMC,GAAN,CAAb;AACH,GAFD;AAIAH,EAAAA,MAAM,CAACI,MAAP,CAAcf,IAAd,EAAqBgB,KAAD,IAAW;AAC3B,QAAGA,KAAH,EAAU,MAAMA,KAAN;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBd,IAAK,IAAGJ,IAAK,EAAlD;AACH,GAHD;AAIH,CAVD","sourcesContent":["import express from \"express\";\nimport next from \"next\";\nimport \"dotenv/config\";\n\nconst PORT = parseInt(process.env.PORT) || 3000;\nconst HOST = process.env.HOST || \"http://localhost\"\nconst dev = process.env.NODE_ENV !== 'production';\nconst app = next({dev});\nconst handle = app.getRequestHandler();\n\napp.prepare().then(() => {\n    const server = express();\n    server.get(\"*\", (req, res) => {\n        return handle(req, res)\n    })\n\n    server.listen(PORT, (error) => {\n        if(error) throw error;\n        console.log(`> Client listening on ${HOST}:${PORT}`)\n    })\n})\n\n"]},"metadata":{},"sourceType":"module"}