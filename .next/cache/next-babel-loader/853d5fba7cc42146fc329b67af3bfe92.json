{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { userActions } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\n\nvar NewUserModal = function NewUserModal(_ref) {\n  _s();\n\n  var children = _ref.children,\n      pageProps = _ref.pageProps,\n      logout = _ref.logout;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(formData) {\n    login(formData.email, formData.password);\n  };\n\n  return __jsx(\"div\", {\n    id: \"myModal\",\n    className: \"modal\"\n  }, __jsx(\"div\", {\n    className: \"modal-content\"\n  }, __jsx(\"span\", {\n    className: \"close\",\n    \"data-type\": \"hide-modal\",\n    \"data-target\": \"myModal\"\n  }, \"\\xD7\"), __jsx(\"h3\", null, \"New User\"), __jsx(\"hr\", {\n    className: \"divider\"\n  }), __jsx(\"form\", {\n    className: \"pure-form pure-form-aligned\"\n  }, __jsx(\"fieldset\", null, __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"Firstname\"\n  }, \"Firstname\"), __jsx(\"input\", {\n    name: \"firstName\",\n    type: \"text\",\n    id: \"Firstname\",\n    placeholder: \"FirstName\"\n  })), __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"Lastname\"\n  }, \"Lastname\"), __jsx(\"input\", {\n    name: \"lastName\",\n    type: \"text\",\n    id: \"Lastname\",\n    placeholder: \"LastName\"\n  })), __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"Email\"\n  }, \"Email Address\"), __jsx(\"input\", {\n    type: \"email\",\n    id: \"Email\",\n    placeholder: \"Email Address\",\n    ref: register({\n      required: \"Email is required\",\n      pattern: {\n        value: pattern.EMAIL,\n        message: errorMessage.INVALID_EMAIL\n      }\n    })\n  })), __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"Phone\"\n  }, \"Phone Number\"), __jsx(\"input\", {\n    type: \"tel\",\n    name: \"phoneNumber\",\n    pattern: \"^(\\\\+1[0-9]{3}|[0-9]{3})[0-9]{3}[0-9]{4}$\",\n    id: \"Phone\",\n    placeholder: \"Phone number\"\n  })), __jsx(\"div\", {\n    className: \"pure-controls\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"pure-button button-secondary\"\n  }, \"Submit\"))))));\n};\n\n_s(NewUserModal, \"bEVAii9oMzhW3ESoVlJ5HG28YG8=\", false, function () {\n  return [useForm];\n});\n\n_c = NewUserModal;\nvar mapDispatchToProps = {\n  logout: userActions.logout\n};\nexport default connect(null, mapDispatchToProps)(NewUserModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewUserModal\");","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/components/newUserModal.js"],"names":["Link","userActions","connect","useForm","NewUserModal","children","pageProps","logout","register","handleSubmit","errors","onSubmit","formData","login","email","password","required","pattern","value","EMAIL","message","errorMessage","INVALID_EMAIL","mapDispatchToProps"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAmC;AAAA;;AAAA,MAAjCC,QAAiC,QAAjCA,QAAiC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,MAAY,QAAZA,MAAY;;AAAA,iBACXJ,OAAO,EADI;AAAA,MAC7CK,QAD6C,YAC7CA,QAD6C;AAAA,MACnCC,YADmC,YACnCA,YADmC;AAAA,MACrBC,MADqB,YACrBA,MADqB;;AAEpD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,QAAQ,EAAI;AACzBC,IAAAA,KAAK,CAACD,QAAQ,CAACE,KAAV,EAAiBF,QAAQ,CAACG,QAA1B,CAAL;AAEH,GAHD;;AAIA,SAAO;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,SAAS,EAAC;AAA5B,KAEH;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAwB,iBAAU,YAAlC;AAA+C,mBAAY;AAA3D,YADJ,EAEI,6BAFJ,EAGI;AAAI,IAAA,SAAS,EAAC;AAAd,IAHJ,EAKI;AAAM,IAAA,SAAS,EAAC;AAAhB,KACE,wBACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,OAAO,EAAC;AAAf,iBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,IAAI,EAAC,MAA7B;AAAoC,IAAA,EAAE,EAAC,WAAvC;AAAmD,IAAA,WAAW,EAAC;AAA/D,IAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,OAAO,EAAC;AAAf,gBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,EAAE,EAAC,UAAtC;AAAiD,IAAA,WAAW,EAAC;AAA7D,IAFJ,CALJ,EAUI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,OAAO,EAAC;AAAf,qBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,EAAE,EAAC,OAAvB;AAA+B,IAAA,WAAW,EAAC,eAA3C;AAA2D,IAAA,GAAG,EAAEP,QAAQ,CAAC;AAACQ,MAAAA,QAAQ,EAAC,mBAAV;AAC3EC,MAAAA,OAAO,EAAC;AACNC,QAAAA,KAAK,EAACD,OAAO,CAACE,KADR;AAENC,QAAAA,OAAO,EAACC,YAAY,CAACC;AAFf;AADmE,KAAD;AAAxE,IAFJ,CAVJ,EAqBI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAO,IAAA,OAAO,EAAC;AAAf,oBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAC,aAAvB;AAAqC,IAAA,OAAO,EAAC,2CAA7C;AAAwF,IAAA,EAAE,EAAC,OAA3F;AAAmG,IAAA,WAAW,EAAC;AAA/G,IAFJ,CArBJ,EA0BI;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC;AAAhC,cADJ,CA1BJ,CADF,CALJ,CAFG,CAAP;AA2CH,CAjDD;;GAAMlB,Y;UACuCD,O;;;KADvCC,Y;AAqDN,IAAMmB,kBAAkB,GAAG;AACvBhB,EAAAA,MAAM,EAAEN,WAAW,CAACM;AADG,CAA3B;AAIA,eAAeL,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCnB,YAAlC,CAAf","sourcesContent":["import Link from \"next/link\";\nimport { userActions } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nconst NewUserModal = ({children, pageProps, logout}) => {\n    const {register, handleSubmit, errors} = useForm();\n    const onSubmit = formData => {\n        login(formData.email, formData.password);\n\n    }\n    return <div id=\"myModal\" className=\"modal\">\n         \n        <div className=\"modal-content\">\n            <span className=\"close\" data-type=\"hide-modal\" data-target=\"myModal\">&times;</span>\n            <h3>New User</h3>\n            <hr className=\"divider\"/>\n            \n            <form className=\"pure-form pure-form-aligned\">\n              <fieldset>\n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"Firstname\">Firstname</label>\n                      <input name=\"firstName\" type=\"text\" id=\"Firstname\" placeholder=\"FirstName\" />\n                  </div>\n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"Lastname\">Lastname</label>\n                      <input name=\"lastName\" type=\"text\" id=\"Lastname\" placeholder=\"LastName\" />\n                  </div>\n                  \n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"Email\">Email Address</label>\n                      <input type=\"email\" id=\"Email\" placeholder=\"Email Address\" ref={register({required:\"Email is required\", \n                    pattern:{\n                      value:pattern.EMAIL,\n                      message:errorMessage.INVALID_EMAIL\n\n                    }\n                  })} />\n                  </div>\n\n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"Phone\">Phone Number</label>\n                      <input type=\"tel\" name=\"phoneNumber\" pattern=\"^(\\+1[0-9]{3}|[0-9]{3})[0-9]{3}[0-9]{4}$\" id=\"Phone\" placeholder=\"Phone number\" />\n                  </div>\n                  \n                  <div className=\"pure-controls\">\n                      <button type=\"submit\" className=\"pure-button button-secondary\">Submit</button>\n                  </div>\n                </fieldset>\n              </form>\n          \n            \n        </div>\n    </div>\n}\n\n\n  \nconst mapDispatchToProps = {\n    logout: userActions.logout\n};\n  \nexport default connect(null, mapDispatchToProps)(NewUserModal) \n"]},"metadata":{},"sourceType":"module"}