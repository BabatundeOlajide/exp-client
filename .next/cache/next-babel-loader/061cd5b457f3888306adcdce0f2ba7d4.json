{"ast":null,"code":"import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService';\nimport Router from 'next/router';\nexport const userActions = {\n  addUser,\n  getAll,\n  delete: _delete\n};\nconst auth = new AuthService();\n\nfunction cleanState() {\n  return dispatch => {\n    dispatch(success());\n  };\n\n  function success() {\n    return {\n      type: userConstants.LOGOUT\n    };\n  }\n}\n\nfunction register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    auth.register(user).then(user => {\n      dispatch(success());\n      Router.push('/login'); // dispatch(alertActions.success('Registration successful'));\n    }, error => {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction addUser(user) {\n  return dispatch => {\n    dispatch(request(user));\n    auth.register(user).then(user => {\n      dispatch(success()); //Router.push('/login');\n      // dispatch(alertActions.success('Registration successful'));\n    }, error => {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    auth.getAll().then(users => dispatch(success(users)), error => dispatch(failure(error.toString())));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return dispatch => {\n    dispatch(request(id));\n    auth.delete(id).then(user => dispatch(success(id)), error => dispatch(failure(id, error.toString())));\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","AuthService","Router","userActions","addUser","getAll","delete","_delete","auth","cleanState","dispatch","success","type","LOGOUT","register","user","request","then","push","error","failure","toString","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService';\nimport Router from 'next/router';\n\nexport const userActions = {\n    addUser,\n    getAll,\n    delete: _delete\n};\n\nconst auth = new AuthService()\n\n\n\nfunction cleanState() {\n    return dispatch => {\n\n        dispatch(success())\n           \n    };\n\n    function success() { return { type: userConstants.LOGOUT } }\n}\n\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        auth.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    Router.push('/login');\n                    // dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction addUser(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        auth.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    //Router.push('/login');\n                    // dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        auth.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        auth.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}