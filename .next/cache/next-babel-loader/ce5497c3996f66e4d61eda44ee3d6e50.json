{"ast":null,"code":"import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService';\nimport Router from 'next/router';\nexport var userActions = {\n  addUser: addUser,\n  getAll: getAll,\n  \"delete\": _delete\n};\nvar auth = new AuthService();\n\nfunction cleanState() {\n  return function (dispatch) {\n    dispatch(success());\n  };\n\n  function success() {\n    return {\n      type: userConstants.LOGOUT\n    };\n  }\n}\n\nfunction addUser(user) {\n  return function (dispatch) {\n    dispatch(request(user));\n    auth.register(user).then(function (user) {\n      dispatch(success()); //Router.push('/login');\n      // dispatch(alertActions.success('Registration successful'));\n    }, function (error) {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction getAll() {\n  return function (dispatch) {\n    dispatch(request());\n    auth.getAll().then(function (users) {\n      return dispatch(success(users));\n    }, function (error) {\n      return dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users: users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error: error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return function (dispatch) {\n    dispatch(request(id));\n    auth[\"delete\"](id).then(function (user) {\n      return dispatch(success(id));\n    }, function (error) {\n      return dispatch(failure(id, error.toString()));\n    });\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id: id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id: id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id: id,\n      error: error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","AuthService","Router","userActions","addUser","getAll","_delete","auth","cleanState","dispatch","success","type","LOGOUT","user","request","register","then","error","failure","toString","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService';\nimport Router from 'next/router';\n\nexport const userActions = {\n    addUser,\n    getAll,\n    delete: _delete\n};\n\nconst auth = new AuthService()\n\n\n\nfunction cleanState() {\n    return dispatch => {\n\n        dispatch(success())\n           \n    };\n\n    function success() { return { type: userConstants.LOGOUT } }\n}\n\n\n\nfunction addUser(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        auth.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    //Router.push('/login');\n                    // dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        auth.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        auth.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}