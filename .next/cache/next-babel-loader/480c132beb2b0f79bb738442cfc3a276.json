{"ast":null,"code":"import { userConstants } from '../constants';\nimport UserService from '../services/UserService';\nexport var userActions = {\n  addUser: addUser,\n  updateUser: updateUser,\n  getAllUsers: getAllUsers,\n  selectUser: selectUser,\n  searchUser: searchUser,\n  resetFilter: resetFilter,\n  uploadReport: uploadReport,\n  \"delete\": _delete\n};\nvar userService = new UserService();\n\nfunction addUser(data) {\n  return function (dispatch, getState) {\n    var token = getState().authentication.token; //dispatch(request(data));\n\n    userService.addUser(data, token).then(function (result) {\n      //console.log(JSON.stringify(result))\n      dispatch(success(result.data.user));\n    }, function (error) {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction updateUser(data) {\n  return function (dispatch, getState) {\n    var token = getState().authentication.token;\n    dispatch(request());\n    userService.updateUser(data, token).then(function (result) {\n      //console.log(JSON.stringify(result))\n      dispatch(updateUserInStore(result.data.user));\n      dispatch(success());\n    }, function (error) {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.UPDATE_USER_REQUEST\n    };\n  }\n\n  function updateUserInStore(user) {\n    return {\n      type: userConstants.UPDATE_USER_IN_STORE,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.UPDATE_USER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.UPDATE_USER_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction getAllUsers() {\n  return function (dispatch, getState) {\n    dispatch(request());\n    var token = getState().authentication.token;\n    userService.getAllUser(token).then(function (result) {\n      return dispatch(success(result.data.users));\n    }, function (error) {\n      return dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users: users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction selectUser(userId) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: userConstants.SELECT_USER,\n      userId: userId\n    });\n    dispatch(request());\n    var data = {\n      userId: userId\n    };\n    var token = getState().authentication.token;\n    userService.getUserReport(data, token).then(function (result) {\n      return dispatch(success(result.data.report));\n    }, function (error) {\n      return dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.USER_REPORT_REQUEST\n    };\n  }\n\n  function success(report) {\n    return {\n      type: userConstants.USER_REPORT_SUCCESS,\n      report: report\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.USER_REPORT_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction resetFilter() {\n  return function (dispatch, getState) {\n    var users = getState().users.allUsers;\n    dispatch({\n      type: userConstants.RESET_FILTER,\n      users: users\n    });\n  };\n}\n\nfunction searchUser(s) {\n  return function (dispatch, getState) {\n    var all = getState().users.allUsers;\n    var query = s.toLowerCase();\n\n    if (query && query != \"\") {\n      var q = query.split(\" \");\n      var filtered = all.filter(function (user) {\n        if (q[0] && user.email.toLowerCase().includes(q[0])) {\n          return user;\n        }\n\n        if (q[1] && user.email.toLowerCase().includes(q[1])) {\n          return user;\n        }\n\n        if (q[0] && user.firstName.toLowerCase().includes(q[0])) {\n          return user;\n        }\n\n        if (q[1] && user.firstName.toLowerCase().includes(q[1])) {\n          return user;\n        }\n\n        if (q[0] && user.lastName.toLowerCase().includes(q[0])) {\n          return user;\n        }\n\n        if (q[1] && user.lastName.toLowerCase().includes(q[1])) {\n          return user;\n        }\n      });\n      dispatch({\n        type: userConstants.FILTERED_USER,\n        users: filtered\n      });\n    } else {\n      dispatch({\n        type: userConstants.FILTERED_USER,\n        user: all\n      });\n    }\n  };\n}\n\nfunction uploadReport(data) {\n  return function (dispatch, getState) {\n    var token = getState().authentication.token;\n    dispatch(request());\n    userService.uploadReport(data, token).then(function (result) {\n      //dispatch(success(result.data.user));\n      dispatch(success(result.data.report));\n      dispatch(success());\n    }, function (error) {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.REPORT_UPLOAD_REQUEST\n    };\n  }\n\n  function updateSelectedUser(user) {\n    return {\n      type: userConstants.UPDATE_USER_IN_STORE,\n      user: user\n    };\n  }\n\n  function success(report) {\n    return {\n      type: userConstants.USER_REPORT_SUCCESS,\n      report: report\n    };\n  }\n\n  function success() {\n    return {\n      type: userConstants.REPORT_UPLOAD_SUCCESS\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REPORT_UPLOAD_FAILURE,\n      error: error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return function (dispatch) {\n    dispatch(request(id));\n    userService[\"delete\"](id).then(function (user) {\n      return dispatch(success(id));\n    }, function (error) {\n      return dispatch(failure(id, error.toString()));\n    });\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id: id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id: id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id: id,\n      error: error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","UserService","userActions","addUser","updateUser","getAllUsers","selectUser","searchUser","resetFilter","uploadReport","_delete","userService","data","dispatch","getState","token","authentication","then","result","success","user","error","failure","toString","request","type","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","updateUserInStore","UPDATE_USER_REQUEST","UPDATE_USER_IN_STORE","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","getAllUser","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","userId","SELECT_USER","getUserReport","report","USER_REPORT_REQUEST","USER_REPORT_SUCCESS","USER_REPORT_FAILURE","allUsers","RESET_FILTER","s","all","query","toLowerCase","q","split","filtered","filter","email","includes","firstName","lastName","FILTERED_USER","REPORT_UPLOAD_REQUEST","updateSelectedUser","REPORT_UPLOAD_SUCCESS","REPORT_UPLOAD_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\n\nimport UserService from '../services/UserService';\n\nexport const userActions = {\n    addUser,\n    updateUser,\n    getAllUsers,\n    selectUser,\n    searchUser,\n    resetFilter,\n    uploadReport,\n    delete: _delete\n};\n\nconst userService = new UserService()\n\n\nfunction addUser(data) {\n    return (dispatch, getState) => {\n        const {token} = getState().authentication;\n        //dispatch(request(data));\n\n        userService.addUser(data, token)\n            .then(\n                result => { \n                    //console.log(JSON.stringify(result))\n                    dispatch(success(result.data.user));\n                    \n                    \n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\n\nfunction updateUser(data) {\n    return (dispatch, getState) => {\n        const {token} = getState().authentication;\n        dispatch(request());\n\n        userService.updateUser(data, token)\n            .then(\n                result => { \n                    //console.log(JSON.stringify(result))\n                    dispatch(updateUserInStore(result.data.user));\n                    dispatch(success())\n                    \n                    \n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                }\n            );\n    };\n\n    function request() { return { type: userConstants.UPDATE_USER_REQUEST } }\n    function updateUserInStore(user) { return { type: userConstants.UPDATE_USER_IN_STORE, user } }\n    function success(user) { return { type: userConstants.UPDATE_USER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.UPDATE_USER_FAILURE, error } }\n}\n\n\nfunction getAllUsers() {\n    return (dispatch, getState) => {\n        dispatch(request());\n        const token = getState().authentication.token\n        userService.getAllUser(token)\n            .then(\n                \n                result => dispatch(success(result.data.users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { \n        return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\nfunction selectUser(userId) {\n    return (dispatch, getState) => {\n        dispatch({ type: userConstants.SELECT_USER, userId });\n        dispatch(request());\n        const data = {userId}\n        const token = getState().authentication.token\n        userService.getUserReport(data, token)\n            .then(\n                \n                result => dispatch(success(result.data.report)),\n                error => dispatch(failure(error.toString()))\n            );\n        \n    };\n\n    function request() { return { type: userConstants.USER_REPORT_REQUEST } }\n    function success(report) { return { type: userConstants.USER_REPORT_SUCCESS, report } }\n    function failure(error) { return { type: userConstants.USER_REPORT_FAILURE, error } }\n    \n}\n\nfunction resetFilter() {\n    return (dispatch, getState) => {\n        const users = getState().users.allUsers\n        dispatch({ type: userConstants.RESET_FILTER, users });\n        \n    };\n    \n}\n\nfunction searchUser(s) {\n    return (dispatch, getState) => {\n        const all = getState().users.allUsers\n        const  query = s.toLowerCase()\n\n        if (query && query != \"\"){\n            const q = query.split(\" \")\n            const filtered = all.filter(user => {\n                if (q[0] && user.email.toLowerCase().includes(q[0])){\n                    return user\n                }\n\n                if (q[1] && user.email.toLowerCase().includes(q[1])){\n                    return user\n                }\n\n                if (q[0] && user.firstName.toLowerCase().includes(q[0])){\n                    return user\n                }\n\n                if (q[1] && user.firstName.toLowerCase().includes(q[1])){\n                    return user\n                }\n\n                if (q[0] && user.lastName.toLowerCase().includes(q[0])){\n                    return user\n                }\n\n                if (q[1] && user.lastName.toLowerCase().includes(q[1])){\n                    return user\n                }\n                    \n            })\n\n            dispatch({ type: userConstants.FILTERED_USER, users: filtered })\n\n        } else {\n\n            dispatch({ type: userConstants.FILTERED_USER, user: all })\n        }\n        \n    };\n    \n}\n\n\nfunction uploadReport(data) {\n    return (dispatch, getState) => {\n        const {token} = getState().authentication;\n        dispatch(request());\n\n        userService.uploadReport(data, token)\n            \n            .then(\n                result => { \n                    \n                    //dispatch(success(result.data.user));\n                    dispatch(success(result.data.report));\n                    dispatch(success())\n                    \n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                }\n            );\n    };\n\n    function request() { return { type: userConstants.REPORT_UPLOAD_REQUEST} }\n    function updateSelectedUser(user) { return { type: userConstants.UPDATE_USER_IN_STORE, user } }\n    function success(report) { return { type: userConstants.USER_REPORT_SUCCESS, report } }\n    function success() { return { type: userConstants.REPORT_UPLOAD_SUCCESS } }\n    function failure(error) { return { type: userConstants.REPORT_UPLOAD_FAILURE, error } }\n}\n\n\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}