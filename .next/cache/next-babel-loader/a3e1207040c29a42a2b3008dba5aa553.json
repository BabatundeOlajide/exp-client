{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { userActions } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { pattern, errorMessage } from '../constants';\n\nvar NewUserModal = function NewUserModal(_ref) {\n  _s();\n\n  var children = _ref.children,\n      pageProps = _ref.pageProps,\n      addingUser = _ref.addingUser,\n      addUserError = _ref.addUserError,\n      error = _ref.error,\n      addUserSuccess = _ref.addUserSuccess,\n      addUser = _ref.addUser,\n      lastAdded = _ref.lastAdded;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      reset = _useForm.reset,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(formData) {\n    addUser(formData); // reset form\n\n    if (addUserSuccess) {\n      reset();\n    }\n  };\n\n  return __jsx(\"div\", {\n    id: \"myModal\",\n    className: \"modal\"\n  }, __jsx(\"div\", {\n    className: \"modal-content\"\n  }, __jsx(\"span\", {\n    className: \"close\",\n    \"data-type\": \"hide-modal\",\n    \"data-target\": \"myModal\"\n  }, \"\\xD7\"), __jsx(\"h3\", null, \"New User\"), __jsx(\"hr\", {\n    className: \"divider\"\n  }), lastAdded && addUserSuccess && Object.keys(errors).length == 0 && __jsx(\"div\", {\n    className: \"panel code\"\n  }, __jsx(\"h4\", {\n    className: \"success\"\n  }, \" LAST RECORD: \", lastAdded.firstName + \" \" + lastAdded.lastName)), addUserError && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, \" \", error))), Object.keys(errors).length != 0 && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, errors.firstName && __jsx(\"li\", null, \" \", errors.firstName.message, \" \"), errors.lastName && __jsx(\"li\", null, \" \", errors.lastName.message, \" \"), errors.email && __jsx(\"li\", null, \" \", errors.email.message), errors.phoneNumber && __jsx(\"li\", null, \" \", errors.phoneNumber.message, \" \"))), __jsx(\"form\", {\n    className: \"pure-form pure-form-aligned\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"fieldset\", null, __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"Firstname\"\n  }, \"Firstname\"), __jsx(\"input\", {\n    name: \"firstName\",\n    type: \"text\",\n    id: \"Firstname\",\n    placeholder: \"FirstName\",\n    ref: register({\n      required: \"FirstName is required\"\n    })\n  })), __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"Lastname\"\n  }, \"Lastname\"), __jsx(\"input\", {\n    name: \"lastName\",\n    type: \"text\",\n    id: \"Lastname\",\n    placeholder: \"LastName\",\n    ref: register({\n      required: \"LastName is required\"\n    })\n  })), __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"Email\"\n  }, \"Email Address\"), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"Email\",\n    placeholder: \"Email Address\",\n    ref: register({\n      required: \"Email is required\",\n      pattern: {\n        value: pattern.EMAIL,\n        message: errorMessage.INVALID_EMAIL\n      }\n    })\n  })), __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"Phone\"\n  }, \"Phone Number\"), __jsx(\"input\", {\n    type: \"tel\",\n    name: \"phoneNumber\",\n    pattern: \"^(\\\\+1[0-9]{3}|[0-9]{3})[0-9]{3}[0-9]{4}$\",\n    id: \"Phone\",\n    placeholder: \"Phone number\",\n    ref: register({\n      required: \"Phone Number is required\",\n      pattern: {\n        value: pattern.PHONE,\n        message: errorMessage.INVALID_PHONE\n      }\n    })\n  })), __jsx(\"div\", {\n    className: \"pure-controls\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"pure-button button-secondary\",\n    disabled: addingUser\n  }, \"Submit\"))))));\n};\n\n_s(NewUserModal, \"NZvb3w7fZeCHPRzMNHe38sEWX9M=\", false, function () {\n  return [useForm];\n});\n\n_c = NewUserModal;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    addUserError: state.users.addUserError,\n    addUserSuccess: state.users.addUserSuccess,\n    error: state.users.error,\n    lastAdded: state.users.lastAdded,\n    addingUser: state.users.addingUser\n  };\n};\n\nvar mapDispatchToProps = {\n  addUser: userActions.addUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewUserModal\");","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/components/newUserModal.js"],"names":["Link","userActions","connect","useForm","pattern","errorMessage","NewUserModal","children","pageProps","addingUser","addUserError","error","addUserSuccess","addUser","lastAdded","register","handleSubmit","reset","errors","onSubmit","formData","Object","keys","length","firstName","lastName","message","email","phoneNumber","required","value","EMAIL","INVALID_EMAIL","PHONE","INVALID_PHONE","mapStateToProps","state","users","mapDispatchToProps"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\nimport { userActions } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { pattern, errorMessage } from '../constants';\n\nconst NewUserModal = ({children, pageProps,addingUser,addUserError,error,addUserSuccess, addUser, lastAdded}) => {\n    const {register, handleSubmit,reset, errors} = useForm();\n    const onSubmit = formData => {\n        addUser(formData);\n\n        // reset form\n        if (addUserSuccess){\n            reset()\n            \n        }\n            \n\n    }\n    return <div id=\"myModal\" className=\"modal\">\n         \n        <div className=\"modal-content\">\n            <span className=\"close\" data-type=\"hide-modal\" data-target=\"myModal\">&times;</span>\n            <h3>New User</h3>\n            <hr className=\"divider\"/>\n            {lastAdded && addUserSuccess && (Object.keys(errors).length == 0) && <div className=\"panel code\">\n            <h4 className=\"success\"> LAST RECORD: {lastAdded.firstName + \" \" + lastAdded.lastName}</h4>\n                </div>\n            }\n            { addUserError && <div className=\"panel code error-msg\">\n                  <ul>\n                    <li> {error}</li>    \n                  </ul>\n                   \n                </div>\n\n            }\n            { Object.keys(errors).length != 0 && \n                <div className=\"panel code error-msg\">\n                  <ul>\n                    \n                    {errors.firstName && <li> {errors.firstName.message} </li> }\n                    {errors.lastName && <li> {errors.lastName.message} </li> }\n    \n                    {errors.email && <li> {errors.email.message}</li> }\n                    {errors.phoneNumber && <li> {errors.phoneNumber.message} </li> }\n                    \n                  </ul>\n                   \n                </div>\n            }\n            \n            <form className=\"pure-form pure-form-aligned\" onSubmit={handleSubmit(onSubmit)}>\n              <fieldset>\n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"Firstname\">Firstname</label>\n                      <input name=\"firstName\" type=\"text\" id=\"Firstname\" placeholder=\"FirstName\" ref={\n                          register({\n                              required:\"FirstName is required\"\n                          })\n                      } />\n                  </div>\n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"Lastname\">Lastname</label>\n                      <input name=\"lastName\" type=\"text\" id=\"Lastname\" placeholder=\"LastName\" ref={\n                          register({\n                              required:\"LastName is required\"\n                          })\n                      } />\n                  </div>\n                  \n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"Email\">Email Address</label>\n                      <input type=\"email\" name=\"email\" id=\"Email\" placeholder=\"Email Address\" ref={register({required:\"Email is required\", \n                            pattern:{\n                            value:pattern.EMAIL,\n                            message:errorMessage.INVALID_EMAIL\n                            }\n                        })} />\n                  </div>\n\n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"Phone\">Phone Number</label>\n                      <input type=\"tel\" name=\"phoneNumber\" pattern=\"^(\\+1[0-9]{3}|[0-9]{3})[0-9]{3}[0-9]{4}$\" id=\"Phone\" placeholder=\"Phone number\" ref={register({required:\"Phone Number is required\", \n                            pattern:{\n                            value:pattern.PHONE,\n                            message:errorMessage.INVALID_PHONE\n\n                            }\n                        })} />\n                  </div>\n                  \n                  <div className=\"pure-controls\">\n                      <button type=\"submit\" className=\"pure-button button-secondary\" disabled={addingUser}>\n                          Submit\n                        </button>\n                  </div>\n                </fieldset>\n              </form>\n          \n            \n        </div>\n    </div>\n}\n\n\nconst mapStateToProps = state => ({\n    addUserError: state.users.addUserError,\n    addUserSuccess: state.users.addUserSuccess,\n    error: state.users.error,\n    lastAdded: state.users.lastAdded,\n    addingUser: state.users.addingUser,\n\n  });\n\nconst mapDispatchToProps = {\n    addUser: userActions.addUser\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(NewUserModal) \n"]},"metadata":{},"sourceType":"module"}