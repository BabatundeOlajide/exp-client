{"ast":null,"code":"import { userConstants } from '../constants';\nimport UserService from '../services/UserService';\nexport const userActions = {\n  addUser,\n  getAllUsers,\n  selectUser,\n  delete: _delete\n};\nconst userService = new UserService();\n\nfunction addUser(data) {\n  return (dispatch, getState) => {\n    const {\n      token\n    } = getState().authentication; //dispatch(request(data));\n\n    userService.addUser(data, token).then(result => {\n      console.log(JSON.stringify(result));\n      dispatch(success(result.data.user));\n    }, error => {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getAllUsers() {\n  return (dispatch, getState) => {\n    dispatch(request());\n    const token = getState().authentication.token;\n    userService.getAllUser(token).then(result => dispatch(success(result.data.users)), error => dispatch(failure(error.toString())));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n}\n\nfunction selectUser(userId) {\n  return dispatch => {\n    dispatch({\n      type: userConstants.SELECT_USER,\n      userId\n    });\n  };\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return dispatch => {\n    dispatch(request(id));\n    userService.delete(id).then(user => dispatch(success(id)), error => dispatch(failure(id, error.toString())));\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","UserService","userActions","addUser","getAllUsers","selectUser","delete","_delete","userService","data","dispatch","getState","token","authentication","then","result","console","log","JSON","stringify","success","user","error","failure","toString","request","type","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","getAllUser","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","userId","SELECT_USER","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\n\nimport UserService from '../services/UserService';\n\nexport const userActions = {\n    addUser,\n    getAllUsers,\n    selectUser,\n    delete: _delete\n};\n\nconst userService = new UserService()\n\n\nfunction addUser(data) {\n    return (dispatch, getState) => {\n        const {token} = getState().authentication;\n        //dispatch(request(data));\n\n        userService.addUser(data, token)\n            .then(\n                result => { \n                    console.log(JSON.stringify(result))\n                    dispatch(success(result.data.user));\n                    \n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAllUsers() {\n    return (dispatch, getState) => {\n        dispatch(request());\n        const token = getState().authentication.token\n        userService.getAllUser(token)\n            .then(\n                \n                result => dispatch(success(result.data.users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { \n        return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\nfunction selectUser(userId) {\n    return (dispatch) => {\n        dispatch({ type: userConstants.SELECT_USER, userId });\n        \n    };\n    \n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}