{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { userActions } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { pattern, errorMessage } from '../constants';\nimport Papa from \"papaparse\";\n\nconst UploadReportModal = ({\n  children,\n  pageProps,\n  addUserError,\n  addUser,\n  selectedUser,\n  lastAdded\n}) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    errors\n  } = useForm();\n\n  const parseCsv = data => {\n    let parsedata = [];\n    let newLinebrk = data.split(\"\\n\");\n\n    for (let i = 0; i < newLinebrk.length; i++) {\n      parsedata.push(newLinebrk[i].split(\",\"));\n    }\n\n    const header = parsedata[0];\n    const records = parsedata.slice(1, -2);\n    console.log(records);\n    return parsedata;\n  };\n\n  const processData = (headers, body) => {\n    //console.log(headers)\n    //console.log(body)\n    const mainKey = headers[0];\n    const largeJson = {};\n\n    for (let i = 1; i < headers.length; i++) {\n      let record = [];\n      let key = headers[i];\n      body.map(line => {\n        let rec = {};\n        rec[line[mainKey]] = line[key];\n        record.push(rec);\n      });\n      l;\n    }\n  };\n\n  const onSubmit = formData => {\n    const file = formData.selectedFile[0];\n    let data = null;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: result => {\n        if (result.errors.length != 0) throw Error(JSON.stringify(result.errors));\n        processData(result.meta.fields, result.data);\n      }\n    });\n    console.log(data); //addUser(formData);\n    // if (!addUserError){\n    //     reset()\n    // }\n  };\n\n  return __jsx(\"div\", {\n    id: \"uploadReportModal\",\n    className: \"modal\"\n  }, __jsx(\"div\", {\n    className: \"modal-content\"\n  }, __jsx(\"span\", {\n    className: \"close\",\n    \"data-type\": \"hide-modal\",\n    \"data-target\": \"uploadReportModal\"\n  }, \"\\xD7\"), selectedUser && __jsx(\"h3\", null, \"Upload a report for \", __jsx(\"span\", {\n    className: \"blue\"\n  }, selectedUser.firstName + \" \" + selectedUser.lastName)), __jsx(\"hr\", {\n    className: \"divider\"\n  }), lastAdded && !addUserError && Object.keys(errors).length == 0 && __jsx(\"div\", {\n    className: \"panel code\"\n  }, __jsx(\"h4\", {\n    className: \"success\"\n  }, \" LAST RECORD: \", lastAdded.firstName + \" \" + lastAdded.lastName)), addUserError && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, \" \", error))), Object.keys(errors).length != 0 && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, errors.firstName && __jsx(\"li\", null, \" \", errors.firstName.message, \" \"), errors.lastName && __jsx(\"li\", null, \" \", errors.lastName.message, \" \"), errors.email && __jsx(\"li\", null, \" \", errors.email.message), errors.phoneNumber && __jsx(\"li\", null, \" \", errors.phoneNumber.message, \" \"))), __jsx(\"form\", {\n    className: \"pure-form pure-form-stacked\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"fieldset\", null, __jsx(\"div\", {\n    className: \"pure-control-group\"\n  }, __jsx(\"label\", {\n    htmlFor: \"selectedFile\"\n  }, \"Select file\"), __jsx(\"input\", {\n    name: \"selectedFile\",\n    required: true,\n    type: \"file\",\n    id: \"selectedFile\",\n    placeholder: \"choose report file (csv)\",\n    ref: register\n  })), __jsx(\"br\", null), __jsx(\"div\", {\n    className: \"pure-controls\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"pure-button button-secondary\"\n  }, \"Submit\"))))));\n};\n\nconst mapStateToProps = state => ({\n  addUserError: state.users.addUserError,\n  lastAdded: state.users.lastAdded,\n  selectedUser: state.users.selectedUser\n});\n\nconst mapDispatchToProps = {\n  addUser: userActions.addUser\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadReportModal);","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/components/uploadReportModal.js"],"names":["Link","userActions","connect","useForm","pattern","errorMessage","Papa","UploadReportModal","children","pageProps","addUserError","addUser","selectedUser","lastAdded","register","handleSubmit","reset","errors","parseCsv","data","parsedata","newLinebrk","split","i","length","push","header","records","slice","console","log","processData","headers","body","mainKey","largeJson","record","key","map","line","rec","l","onSubmit","formData","file","selectedFile","parse","skipEmptyLines","complete","result","Error","JSON","stringify","meta","fields","firstName","lastName","Object","keys","error","message","email","phoneNumber","mapStateToProps","state","users","mapDispatchToProps"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\nimport { userActions } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { pattern, errorMessage } from '../constants';\nimport Papa from \"papaparse\"\n\nconst UploadReportModal = ({children, pageProps,addUserError, addUser,selectedUser, lastAdded}) => {\n    const {register, handleSubmit,reset, errors} = useForm();\n    const parseCsv = (data) => {\n        \n        let parsedata = [];\n\n        let newLinebrk = data.split(\"\\n\");\n\n        for(let i = 0; i < newLinebrk.length; i++) {\n\n            parsedata.push(newLinebrk[i].split(\",\"))\n            \n        }\n\n        const header = parsedata[0]\n        const records = parsedata.slice(1, -2)\n        console.log(records)\n\n        return parsedata\n    }\n\n    const processData = (headers, body ) => {\n        //console.log(headers)\n        //console.log(body)\n        const mainKey = headers[0]\n        const largeJson = {} \n        for (let i = 1; i < headers.length; i++) {\n            let record = []\n            let key = headers[i]\n            body.map(line => {\n                let rec = {}\n                rec[line[mainKey]] = line[key]\n                record.push(rec)\n            })\n\n            l\n        }\n    }\n    const onSubmit = formData => {\n        const file = formData.selectedFile[0]\n\n        let data = null;\n \n        Papa.parse(file, {\n            header:true,\n            skipEmptyLines:true,\n            \n            complete: result => {\n                if (result.errors.length != 0)\n                    throw Error(JSON.stringify(result.errors))\n                processData(result.meta.fields, result.data)\n                \n            }\n        })\n        \n\n        console.log(data)\n\n        \n        //addUser(formData);\n\n        \n        // if (!addUserError){\n        //     reset()\n            \n        // }\n            \n\n    }\n    return <div id=\"uploadReportModal\" className=\"modal\">\n         \n        <div className=\"modal-content\">\n            <span className=\"close\" data-type=\"hide-modal\" data-target=\"uploadReportModal\">&times;</span>\n            {selectedUser && <h3>Upload a report for <span className=\"blue\">{selectedUser.firstName + \" \" + selectedUser.lastName}</span></h3> }\n            <hr className=\"divider\"/>\n            {lastAdded && !addUserError && (Object.keys(errors).length == 0) && <div className=\"panel code\">\n            <h4 className=\"success\"> LAST RECORD: {lastAdded.firstName + \" \" + lastAdded.lastName}</h4>\n                </div>\n            }\n            { addUserError && <div className=\"panel code error-msg\">\n                  <ul>\n                    <li> {error}</li>    \n                  </ul>\n                   \n                </div>\n\n            }\n            { Object.keys(errors).length != 0 && \n                <div className=\"panel code error-msg\">\n                  <ul>\n                    \n                    {errors.firstName && <li> {errors.firstName.message} </li> }\n                    {errors.lastName && <li> {errors.lastName.message} </li> }\n    \n                    {errors.email && <li> {errors.email.message}</li> }\n                    {errors.phoneNumber && <li> {errors.phoneNumber.message} </li> }\n                    \n                  </ul>\n                   \n                </div>\n            }\n            \n            <form className=\"pure-form pure-form-stacked\" onSubmit={handleSubmit(onSubmit)}>\n              <fieldset>\n                  <div className=\"pure-control-group\">\n                      <label htmlFor=\"selectedFile\">Select file</label>\n                      <input name=\"selectedFile\" required={true} type=\"file\" id=\"selectedFile\" placeholder=\"choose report file (csv)\" ref={register} />\n                  </div>\n                  <br/>\n                  \n                  <div className=\"pure-controls\">\n                      <button type=\"submit\" className=\"pure-button button-secondary\">Submit</button>\n                  </div>\n                </fieldset>\n              </form>\n          \n            \n        </div>\n    </div>\n}\n\n\nconst mapStateToProps = state => ({\n    addUserError: state.users.addUserError,\n    lastAdded: state.users.lastAdded,\n    selectedUser: state.users.selectedUser\n  });\n\nconst mapDispatchToProps = {\n    addUser: userActions.addUser\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(UploadReportModal) \n"]},"metadata":{},"sourceType":"module"}