{"ast":null,"code":"import { userConstants } from '../constants';\nimport UserService from '../services/UserService';\nexport var userActions = {\n  addUser: addUser,\n  getAll: getAll,\n  \"delete\": _delete\n};\nvar userService = new UserService();\n\nfunction addUser(data) {\n  return function (dispatch, getState) {\n    var token = getState().authentication.token; //dispatch(request(data));\n\n    userService.addUser(data, token).then(function (user) {\n      dispatch(success(user));\n    }, function (error) {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction getAllUser() {\n  return function (dispatch, getState) {\n    dispatch(request());\n    var token = getState();\n    userService.getAll().then(function (users) {\n      return dispatch(success(users));\n    }, function (error) {\n      return dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users: users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error: error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return function (dispatch) {\n    dispatch(request(id));\n    userService[\"delete\"](id).then(function (user) {\n      return dispatch(success(id));\n    }, function (error) {\n      return dispatch(failure(id, error.toString()));\n    });\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id: id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id: id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id: id,\n      error: error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","UserService","userActions","addUser","getAll","_delete","userService","data","dispatch","getState","token","authentication","then","user","success","error","failure","toString","request","type","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","getAllUser","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\n\nimport UserService from '../services/UserService';\n\nexport const userActions = {\n    addUser,\n    getAll,\n    delete: _delete\n};\n\nconst userService = new UserService()\n\n\nfunction addUser(data) {\n    return (dispatch, getState) => {\n        const {token} = getState().authentication;\n        //dispatch(request(data));\n\n        userService.addUser(data, token)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    \n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAllUser() {\n    return (dispatch, getState) => {\n        dispatch(request());\n        const token = getState()\n        userService.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}