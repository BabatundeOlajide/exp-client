{"ast":null,"code":"import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService'; // import { alertActions } from './';\n\nimport Router from 'next/router';\nexport var userActions = {\n  login: login,\n  logout: logout,\n  loggedIn: loggedIn,\n  register: register,\n  getAll: getAll,\n  defaultUser: defaultUser,\n  setAccessToken: setAccessToken,\n  \"delete\": _delete\n};\nvar auth = new AuthService();\n\nfunction defaultUser(name, email) {\n  var currentUser = {\n    name: name,\n    email: email\n  };\n  return {\n    type: userConstants.DEFAULT_USER,\n    currentUser: currentUser\n  };\n}\n\nfunction setAccessToken(token) {\n  return {\n    type: userConstants.ACCESS_TOKEN,\n    token: token\n  };\n}\n\nfunction login(email, password) {\n  //console.log(\"Called Me!\")\n  return function (dispatch) {\n    dispatch(request({\n      email: email\n    }));\n    auth.loginAdmin(email, password).then(function (user) {\n      console.log(\"The user is \".concat(user));\n      dispatch(success(user));\n      Router.push('/home');\n    }, function (error) {\n      //console.log( 'The error is ' + error.toString())\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction loggedIn() {\n  return function (dispatch) {\n    dispatch(request());\n    dispatch(success(auth.loggedIn()));\n  };\n\n  function request() {\n    return {\n      type: userConstants.TOKEN_REQUEST\n    };\n  }\n\n  function success(status) {\n    return {\n      type: userConstants.TOKEN_SUCCESS,\n      status: status\n    };\n  }\n}\n\nfunction logout() {\n  auth.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return function (dispatch) {\n    dispatch(request(user));\n    auth.register(user).then(function (user) {\n      dispatch(success());\n      Router.push('/login'); // dispatch(alertActions.success('Registration successful'));\n    }, function (error) {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction getAll() {\n  return function (dispatch) {\n    dispatch(request());\n    auth.getAll().then(function (users) {\n      return dispatch(success(users));\n    }, function (error) {\n      return dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users: users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error: error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return function (dispatch) {\n    dispatch(request(id));\n    auth[\"delete\"](id).then(function (user) {\n      return dispatch(success(id));\n    }, function (error) {\n      return dispatch(failure(id, error.toString()));\n    });\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id: id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id: id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id: id,\n      error: error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","AuthService","Router","userActions","login","logout","loggedIn","register","getAll","defaultUser","setAccessToken","_delete","auth","name","email","currentUser","type","DEFAULT_USER","token","ACCESS_TOKEN","password","dispatch","request","loginAdmin","then","user","console","log","success","push","error","failure","toString","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","TOKEN_REQUEST","status","TOKEN_SUCCESS","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService';\n// import { alertActions } from './';\nimport Router from 'next/router';\n\nexport const userActions = {\n    login,\n    logout,\n    loggedIn,\n    register,\n    getAll,\n    defaultUser,\n    setAccessToken,\n    delete: _delete\n};\n\nconst auth = new AuthService()\n\nfunction defaultUser(name, email){\n    const currentUser = {name, email}\n    return {type: userConstants.DEFAULT_USER, currentUser}\n}\n\nfunction setAccessToken(token){\n    return {type: userConstants.ACCESS_TOKEN, token}\n}\n\nfunction login(email, password) {\n    //console.log(\"Called Me!\")\n    return dispatch => {\n        dispatch(request({ email }));\n\n        auth.loginAdmin(email, password)\n            .then(\n                user => { \n                    console.log(`The user is ${user}`)\n                    dispatch(success(user));\n                    Router.push('/home');\n                },\n                error => {\n                    //console.log( 'The error is ' + error.toString())\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction loggedIn() {\n    return dispatch => {\n        dispatch(request());\n        dispatch(success(auth.loggedIn()));\n    };\n    function request() { return { type: userConstants.TOKEN_REQUEST } }\n    function success(status) { return { type: userConstants.TOKEN_SUCCESS, status } }\n}\n\nfunction logout() {\n    auth.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        auth.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    Router.push('/login');\n                    // dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        auth.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        auth.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}