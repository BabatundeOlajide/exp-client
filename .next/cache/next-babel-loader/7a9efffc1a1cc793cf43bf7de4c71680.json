{"ast":null,"code":"import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService'; // import { alertActions } from './';\n\nimport Router from 'next/router';\nexport const userActions = {\n  login,\n  logout,\n  loggedIn,\n  register,\n  getAll,\n  defaultUser,\n  setAccessToken,\n  alreadyloggedIn,\n  delete: _delete\n};\nconst auth = new AuthService();\n\nfunction defaultUser(name, email) {\n  const currentUser = {\n    name,\n    email\n  };\n  return {\n    type: userConstants.DEFAULT_USER,\n    currentUser\n  };\n}\n\nfunction setAccessToken(token) {\n  return {\n    type: userConstants.ACCESS_TOKEN,\n    token\n  };\n}\n\nfunction login(email, password) {\n  //console.log(\"Called Me!\")\n  return dispatch => {\n    dispatch(request({\n      email\n    }));\n    auth.loginAdmin(email, password).then(result => {\n      const user = result.data.user;\n      const token = result.data.token;\n      console.log(`The user is ${user.firstName}`);\n      dispatch(success(user));\n      dispatch({\n        type: userConstants.T,\n        token\n      });\n      Router.push('/home');\n    }, error => {\n      console.log(error.toString());\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction loggedIn() {\n  return dispatch => {\n    dispatch(request());\n    dispatch(success(auth.loggedIn()));\n  };\n\n  function request() {\n    return {\n      type: userConstants.TOKEN_REQUEST\n    };\n  }\n\n  function success(status) {\n    return {\n      type: userConstants.TOKEN_SUCCESS,\n      status\n    };\n  }\n}\n\nfunction alreadyloggedIn(user) {\n  return dispatch => {\n    dispatch({\n      type: userConstants.LOGIN_SUCCESS,\n      user\n    });\n  };\n}\n\nfunction logout() {\n  auth.logout();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nfunction register(user) {\n  return dispatch => {\n    dispatch(request(user));\n    auth.register(user).then(user => {\n      dispatch(success());\n      Router.push('/login'); // dispatch(alertActions.success('Registration successful'));\n    }, error => {\n      dispatch(failure(error.toString())); // dispatch(alertActions.error(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    auth.getAll().then(users => dispatch(success(users)), error => dispatch(failure(error.toString())));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return dispatch => {\n    dispatch(request(id));\n    auth.delete(id).then(user => dispatch(success(id)), error => dispatch(failure(id, error.toString())));\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","AuthService","Router","userActions","login","logout","loggedIn","register","getAll","defaultUser","setAccessToken","alreadyloggedIn","delete","_delete","auth","name","email","currentUser","type","DEFAULT_USER","token","ACCESS_TOKEN","password","dispatch","request","loginAdmin","then","result","user","data","console","log","firstName","success","T","push","error","toString","failure","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","TOKEN_REQUEST","status","TOKEN_SUCCESS","LOGOUT","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\nimport AuthService from '../services/AuthService';\n// import { alertActions } from './';\nimport Router from 'next/router';\n\nexport const userActions = {\n    login,\n    logout,\n    loggedIn,\n    register,\n    getAll,\n    defaultUser,\n    setAccessToken,\n    alreadyloggedIn,\n    delete: _delete\n};\n\nconst auth = new AuthService()\n\nfunction defaultUser(name, email){\n    const currentUser = {name, email}\n    return {type: userConstants.DEFAULT_USER, currentUser}\n}\n\nfunction setAccessToken(token){\n    return {type: userConstants.ACCESS_TOKEN, token}\n}\n\nfunction login(email, password) {\n    //console.log(\"Called Me!\")\n    return dispatch => {\n        \n        dispatch(request({ email }));\n\n        auth.loginAdmin(email, password)\n            .then(\n                result => { \n                    const user = result.data.user\n                    const token = result.data.token\n                    console.log(`The user is ${user.firstName}`)\n                    dispatch(success(user));\n                    dispatch({type:userConstants.T, token});\n                    Router.push('/home');\n                },\n                error => {\n                    console.log(error.toString())\n                    dispatch(failure(error.toString()));\n                    \n                }\n            );\n    };\n\n    \n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n\n\n\n\n\n\n\n\n\n\n}\n\nfunction loggedIn() {\n    return dispatch => {\n        dispatch(request());\n        dispatch(success(auth.loggedIn()));\n    };\n    function request() { return { type: userConstants.TOKEN_REQUEST } }\n    function success(status) { return { type: userConstants.TOKEN_SUCCESS, status } }\n}\n\nfunction alreadyloggedIn(user) {\n    return dispatch => {\n        dispatch({type:userConstants.LOGIN_SUCCESS, user});\n        \n    };\n}\n\nfunction logout() {\n    auth.logout();\n    return { type: userConstants.LOGOUT };\n}\n\nfunction register(user) {\n    return dispatch => {\n        dispatch(request(user));\n\n        auth.register(user)\n            .then(\n                user => { \n                    dispatch(success());\n                    Router.push('/login');\n                    // dispatch(alertActions.success('Registration successful'));\n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                    // dispatch(alertActions.error(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        auth.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        auth.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}