{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport LoginLayout from '../components/layouts/loginLayout';\nimport Link from 'next/link';\nimport { useForm } from \"react-hook-form\";\nimport { connect } from 'react-redux';\nimport { authActions } from \"../actions\";\nimport Router from \"next/router\";\nimport { useEffect } from 'react';\nimport { pattern, errorMessage } from '../constants';\n\nvar LoginPage = function LoginPage(_ref) {\n  _s();\n\n  var cleanState = _ref.cleanState,\n      login = _ref.login,\n      loginError = _ref.loginError,\n      error = _ref.error,\n      pageProps = _ref.pageProps;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(formData) {\n    login(formData.email, formData.password);\n  };\n\n  useEffect(function () {\n    cleanState();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Admin | Login\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(\"div\", {\n    className: \"content code\"\n  }, __jsx(\"h2\", null, \"Administrative login\"), loginError && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, \" \", error))), Object.keys(errors).length != 0 && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, errors.email && __jsx(\"li\", null, \" \", errors.email.message), errors.password && __jsx(\"li\", null, \" \", errors.password.message, \" \"))), __jsx(\"form\", {\n    className: \"pure-form pure-form-aligned\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"fieldset\", null, __jsx(\"div\", {\n    className: \"pure-control-group \".concat(errors.email && 'error-input')\n  }, __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email Address\"), __jsx(\"input\", {\n    type: \"email\",\n    ref: register({\n      required: \"Email is required\",\n      pattern: {\n        value: pattern.EMAIL,\n        message: errorMessage.INVALID_EMAIL\n      }\n    }),\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"Email Address\"\n  })), __jsx(\"div\", {\n    className: \"pure-control-group \".concat(errors.password && 'error-input')\n  }, __jsx(\"label\", {\n    htmlFor: \"password\"\n  }, \"Password\"), __jsx(\"input\", {\n    className: \" \".concat(errors.password && 'error'),\n    type: \"password\",\n    ref: register({\n      required: \"Password is required\",\n      pattern: {\n        value: pattern.PASSWORD,\n        message: errorMessage.INVALID_PASSWORD\n      }\n    }),\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Password\"\n  })), __jsx(\"div\", {\n    className: \"pure-controls\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"pure-button button-secondary\"\n  }, __jsx(\"img\", {\n    src: \"/img/45.gif\",\n    style: {\n      width: \"20px\",\n      height: \"20px\"\n    }\n  }), \"Submit\"))))));\n};\n\n_s(LoginPage, \"gjCPXZIqi3zyDJihlEh7b1DV7HE=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginPage;\nLoginPage.Layout = LoginLayout;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loginError: !state.authentication.loggedIn && state.authentication.error,\n    error: state.authentication.error\n  };\n};\n\nvar mapDispatchToProps = {\n  login: authActions.login,\n  cleanState: authActions.cleanState\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/pages/index.js"],"names":["Head","styles","LoginLayout","Link","useForm","connect","authActions","Router","useEffect","pattern","errorMessage","LoginPage","cleanState","login","loginError","error","pageProps","register","handleSubmit","errors","onSubmit","formData","email","password","Object","keys","length","message","required","value","EMAIL","INVALID_EMAIL","PASSWORD","INVALID_PASSWORD","width","height","Layout","mapStateToProps","state","authentication","loggedIn","mapDispatchToProps"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport styles from '../styles/Home.module.css'\nimport LoginLayout from '../components/layouts/loginLayout'\nimport Link from 'next/link'\nimport { useForm } from \"react-hook-form\";\nimport { connect } from 'react-redux';\nimport { authActions } from \"../actions\";\nimport Router from \"next/router\"\nimport { useEffect } from 'react';\nimport { pattern, errorMessage } from '../constants';\n\nconst LoginPage = ({cleanState, login, loginError ,error, pageProps}) => {\n  const {register, handleSubmit, errors} = useForm();\n  const onSubmit = formData => {\n    login(formData.email, formData.password);\n\n  }\n\n  useEffect(()=>{\n    cleanState()\n\n  },[])\n\n  \n  return (\n    \n    <>\n      <Head>\n        <title>Admin | Login</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n        \n          <div  className=\"content code\">\n            <h2>Administrative login</h2>\n            { loginError && <div className=\"panel code error-msg\">\n                  <ul>\n                    <li> {error}</li>    \n                  </ul>\n                   \n                </div>\n\n            }\n            { Object.keys(errors).length != 0 && \n                <div className=\"panel code error-msg\">\n                  <ul>\n                    {errors.email && <li> {errors.email.message}</li> }\n                    {errors.password && <li> {errors.password.message} </li> }\n                    \n                  </ul>\n                   \n                </div>\n            }\n            \n            <form className=\"pure-form pure-form-aligned\" onSubmit={handleSubmit(onSubmit)}>\n            <fieldset>\n                \n                \n                <div className={`pure-control-group ${errors.email && 'error-input'}`} >\n                    <label htmlFor=\"email\">Email Address</label>\n                    <input \n                    type=\"email\" ref={register({required:\"Email is required\", \n                    pattern:{\n                      value:pattern.EMAIL,\n                      message:errorMessage.INVALID_EMAIL\n\n                    }\n                  })}\n                    name=\"email\" id=\"email\" placeholder=\"Email Address\" />\n                    {/*<span className=\"pure-form-message-inline\">This is a required field.</span>*/}\n                </div>\n\n                <div className={`pure-control-group ${errors.password && 'error-input'}`}>\n                    <label htmlFor=\"password\">Password</label>\n                    <input className={` ${errors.password && 'error'}`} \n                    type=\"password\" ref={register({required:\"Password is required\", \n                    pattern:{\n                      value:pattern.PASSWORD,\n                      message:errorMessage.INVALID_PASSWORD\n\n                    }\n                  })}  \n                    name=\"password\" id=\"password\" placeholder=\"Password\" />\n                </div>\n                \n                <div className=\"pure-controls\">\n                    \n                    <button type=\"submit\" className=\"pure-button button-secondary\">\n                      <img src=\"/img/45.gif\" style={{width:\"20px\", height:\"20px\"}}/>\n                      Submit\n                      </button>\n                    \n                </div>\n            </fieldset>\n          </form>\n          </div>\n\n          \n        \n      \n\n    </>\n  )\n}\n\n\n\nLoginPage.Layout = LoginLayout\n\nconst mapStateToProps = state => ({\n  loginError: !state.authentication.loggedIn && state.authentication.error,\n  error: state.authentication.error\n});\n\nconst mapDispatchToProps = {\n  login: authActions.login,\n  cleanState: authActions.cleanState\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage) "]},"metadata":{},"sourceType":"module"}