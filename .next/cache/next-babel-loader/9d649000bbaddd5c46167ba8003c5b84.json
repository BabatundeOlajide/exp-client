{"ast":null,"code":"import { userConstants } from '../constants';\nimport UserService from '../services/UserService';\nexport const userActions = {\n  addUser,\n  getAll,\n  delete: _delete\n};\nconst userService = new UserService();\n\nfunction addUser(user) {\n  return dispatch => {\n    const {\n      token\n    } = getState().authentication;\n    dispatch(request(user));\n    userService.addUser(user).then(user => {\n      dispatch(success(user));\n    }, error => {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    userService.getAll().then(users => dispatch(success(users)), error => dispatch(failure(error.toString())));\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return dispatch => {\n    dispatch(request(id));\n    userService.delete(id).then(user => dispatch(success(id)), error => dispatch(failure(id, error.toString())));\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id,\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","UserService","userActions","addUser","getAll","delete","_delete","userService","user","dispatch","token","getState","authentication","request","then","success","error","failure","toString","type","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { userConstants } from '../constants';\n\nimport UserService from '../services/UserService';\n\nexport const userActions = {\n    addUser,\n    getAll,\n    delete: _delete\n};\n\nconst userService = new UserService()\n\n\nfunction addUser(user) {\n    return dispatch => {\n        const {token} = getState().authentication;\n        dispatch(request(user));\n\n        userService.addUser(user)\n            .then(\n                user => { \n                    dispatch(success(user));\n                    \n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n\n        userService.getAll()\n            .then(\n                users => dispatch(success(users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}