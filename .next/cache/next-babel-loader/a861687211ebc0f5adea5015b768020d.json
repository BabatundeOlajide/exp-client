{"ast":null,"code":"import { userConstants } from '../constants';\nimport UserService from '../services/UserService';\nexport var userActions = {\n  addUser: addUser,\n  getAllUsers: getAllUsers,\n  selectUser: selectUser,\n  searchUser: searchUser,\n  \"delete\": _delete\n};\nvar userService = new UserService();\n\nfunction addUser(data) {\n  return function (dispatch, getState) {\n    var token = getState().authentication.token; //dispatch(request(data));\n\n    userService.addUser(data, token).then(function (result) {\n      //console.log(JSON.stringify(result))\n      dispatch(success(result.data.user));\n    }, function (error) {\n      dispatch(failure(error.toString()));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstants.REGISTER_REQUEST,\n      user: user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstants.REGISTER_SUCCESS,\n      user: user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.REGISTER_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction getAllUsers() {\n  return function (dispatch, getState) {\n    dispatch(request());\n    var token = getState().authentication.token;\n    userService.getAllUser(token).then(function (result) {\n      return dispatch(success(result.data.users));\n    }, function (error) {\n      return dispatch(failure(error.toString()));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstants.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstants.GETALL_SUCCESS,\n      users: users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstants.GETALL_FAILURE,\n      error: error\n    };\n  }\n}\n\nfunction selectUser(userId) {\n  return function (dispatch) {\n    dispatch({\n      type: userConstants.SELECT_USER,\n      userId: userId\n    });\n  };\n}\n\nfunction searchUser(query) {\n  return function (dispatch, getState) {\n    var all = dispatch({\n      type: userConstants.SELECT_USER,\n      userId: userId\n    });\n  };\n} // prefixed function name with underscore because delete is a reserved word in javascript\n\n\nfunction _delete(id) {\n  return function (dispatch) {\n    dispatch(request(id));\n    userService[\"delete\"](id).then(function (user) {\n      return dispatch(success(id));\n    }, function (error) {\n      return dispatch(failure(id, error.toString()));\n    });\n  };\n\n  function request(id) {\n    return {\n      type: userConstants.DELETE_REQUEST,\n      id: id\n    };\n  }\n\n  function success(id) {\n    return {\n      type: userConstants.DELETE_SUCCESS,\n      id: id\n    };\n  }\n\n  function failure(id, error) {\n    return {\n      type: userConstants.DELETE_FAILURE,\n      id: id,\n      error: error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/actions/user.actions.js"],"names":["userConstants","UserService","userActions","addUser","getAllUsers","selectUser","searchUser","_delete","userService","data","dispatch","getState","token","authentication","then","result","success","user","error","failure","toString","request","type","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","getAllUser","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","userId","SELECT_USER","query","all","id","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AAEA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,OAAO,EAAPA,OADuB;AAEvBC,EAAAA,WAAW,EAAXA,WAFuB;AAGvBC,EAAAA,UAAU,EAAVA,UAHuB;AAIvBC,EAAAA,UAAU,EAAVA,UAJuB;AAKvB,YAAQC;AALe,CAApB;AAQP,IAAMC,WAAW,GAAG,IAAIP,WAAJ,EAApB;;AAGA,SAASE,OAAT,CAAiBM,IAAjB,EAAuB;AACnB,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,QACpBC,KADoB,GACXD,QAAQ,GAAGE,cADA,CACpBD,KADoB,EAE3B;;AAEAJ,IAAAA,WAAW,CAACL,OAAZ,CAAoBM,IAApB,EAA0BG,KAA1B,EACKE,IADL,CAEQ,UAAAC,MAAM,EAAI;AACN;AACAL,MAAAA,QAAQ,CAACM,OAAO,CAACD,MAAM,CAACN,IAAP,CAAYQ,IAAb,CAAR,CAAR;AAEH,KANT,EAOQ,UAAAC,KAAK,EAAI;AACLR,MAAAA,QAAQ,CAACS,OAAO,CAACD,KAAK,CAACE,QAAN,EAAD,CAAR,CAAR;AACH,KATT;AAWH,GAfD;;AAiBA,WAASC,OAAT,CAAiBJ,IAAjB,EAAuB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAEtB,aAAa,CAACuB,gBAAtB;AAAwCN,MAAAA,IAAI,EAAJA;AAAxC,KAAP;AAAuD;;AAChF,WAASD,OAAT,CAAiBC,IAAjB,EAAuB;AAAE,WAAO;AAAEK,MAAAA,IAAI,EAAEtB,aAAa,CAACwB,gBAAtB;AAAwCP,MAAAA,IAAI,EAAJA;AAAxC,KAAP;AAAuD;;AAChF,WAASE,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEI,MAAAA,IAAI,EAAEtB,aAAa,CAACyB,gBAAtB;AAAwCP,MAAAA,KAAK,EAALA;AAAxC,KAAP;AAAwD;AACrF;;AAED,SAASd,WAAT,GAAuB;AACnB,SAAO,UAACM,QAAD,EAAWC,QAAX,EAAwB;AAC3BD,IAAAA,QAAQ,CAACW,OAAO,EAAR,CAAR;AACA,QAAMT,KAAK,GAAGD,QAAQ,GAAGE,cAAX,CAA0BD,KAAxC;AACAJ,IAAAA,WAAW,CAACkB,UAAZ,CAAuBd,KAAvB,EACKE,IADL,CAGQ,UAAAC,MAAM;AAAA,aAAIL,QAAQ,CAACM,OAAO,CAACD,MAAM,CAACN,IAAP,CAAYkB,KAAb,CAAR,CAAZ;AAAA,KAHd,EAIQ,UAAAT,KAAK;AAAA,aAAIR,QAAQ,CAACS,OAAO,CAACD,KAAK,CAACE,QAAN,EAAD,CAAR,CAAZ;AAAA,KAJb;AAMH,GATD;;AAWA,WAASC,OAAT,GAAmB;AAAE,WAAO;AAAEC,MAAAA,IAAI,EAAEtB,aAAa,CAAC4B;AAAtB,KAAP;AAA+C;;AACpE,WAASZ,OAAT,CAAiBW,KAAjB,EAAwB;AACpB,WAAO;AAAEL,MAAAA,IAAI,EAAEtB,aAAa,CAAC6B,cAAtB;AAAsCF,MAAAA,KAAK,EAALA;AAAtC,KAAP;AAAsD;;AAC1D,WAASR,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAEI,MAAAA,IAAI,EAAEtB,aAAa,CAAC8B,cAAtB;AAAsCZ,MAAAA,KAAK,EAALA;AAAtC,KAAP;AAAsD;AACnF;;AAED,SAASb,UAAT,CAAoB0B,MAApB,EAA4B;AACxB,SAAO,UAACrB,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAEtB,aAAa,CAACgC,WAAtB;AAAmCD,MAAAA,MAAM,EAANA;AAAnC,KAAD,CAAR;AAEH,GAHD;AAKH;;AAED,SAASzB,UAAT,CAAoB2B,KAApB,EAA2B;AACvB,SAAO,UAACvB,QAAD,EAAWC,QAAX,EAAwB;AAC3B,QAAMuB,GAAG,GACTxB,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAEtB,aAAa,CAACgC,WAAtB;AAAmCD,MAAAA,MAAM,EAANA;AAAnC,KAAD,CADR;AAGH,GAJD;AAMH,C,CAED;;;AACA,SAASxB,OAAT,CAAiB4B,EAAjB,EAAqB;AACjB,SAAO,UAAAzB,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACW,OAAO,CAACc,EAAD,CAAR,CAAR;AAEA3B,IAAAA,WAAW,UAAX,CAAmB2B,EAAnB,EACKrB,IADL,CAEQ,UAAAG,IAAI;AAAA,aAAIP,QAAQ,CAACM,OAAO,CAACmB,EAAD,CAAR,CAAZ;AAAA,KAFZ,EAGQ,UAAAjB,KAAK;AAAA,aAAIR,QAAQ,CAACS,OAAO,CAACgB,EAAD,EAAKjB,KAAK,CAACE,QAAN,EAAL,CAAR,CAAZ;AAAA,KAHb;AAKH,GARD;;AAUA,WAASC,OAAT,CAAiBc,EAAjB,EAAqB;AAAE,WAAO;AAAEb,MAAAA,IAAI,EAAEtB,aAAa,CAACoC,cAAtB;AAAsCD,MAAAA,EAAE,EAAFA;AAAtC,KAAP;AAAmD;;AAC1E,WAASnB,OAAT,CAAiBmB,EAAjB,EAAqB;AAAE,WAAO;AAAEb,MAAAA,IAAI,EAAEtB,aAAa,CAACqC,cAAtB;AAAsCF,MAAAA,EAAE,EAAFA;AAAtC,KAAP;AAAmD;;AAC1E,WAAShB,OAAT,CAAiBgB,EAAjB,EAAqBjB,KAArB,EAA4B;AAAE,WAAO;AAAEI,MAAAA,IAAI,EAAEtB,aAAa,CAACsC,cAAtB;AAAsCH,MAAAA,EAAE,EAAFA,EAAtC;AAA0CjB,MAAAA,KAAK,EAALA;AAA1C,KAAP;AAA0D;AAC3F","sourcesContent":["import { userConstants } from '../constants';\n\nimport UserService from '../services/UserService';\n\nexport const userActions = {\n    addUser,\n    getAllUsers,\n    selectUser,\n    searchUser,\n    delete: _delete\n};\n\nconst userService = new UserService()\n\n\nfunction addUser(data) {\n    return (dispatch, getState) => {\n        const {token} = getState().authentication;\n        //dispatch(request(data));\n\n        userService.addUser(data, token)\n            .then(\n                result => { \n                    //console.log(JSON.stringify(result))\n                    dispatch(success(result.data.user));\n                    \n                },\n                error => {\n                    dispatch(failure(error.toString()));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, user } }\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction getAllUsers() {\n    return (dispatch, getState) => {\n        dispatch(request());\n        const token = getState().authentication.token\n        userService.getAllUser(token)\n            .then(\n                \n                result => dispatch(success(result.data.users)),\n                error => dispatch(failure(error.toString()))\n            );\n    };\n\n    function request() { return { type: userConstants.GETALL_REQUEST } }\n    function success(users) { \n        return { type: userConstants.GETALL_SUCCESS, users } }\n    function failure(error) { return { type: userConstants.GETALL_FAILURE, error } }\n}\n\nfunction selectUser(userId) {\n    return (dispatch) => {\n        dispatch({ type: userConstants.SELECT_USER, userId });\n        \n    };\n    \n}\n\nfunction searchUser(query) {\n    return (dispatch, getState) => {\n        const all = \n        dispatch({ type: userConstants.SELECT_USER, userId });\n        \n    };\n    \n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\nfunction _delete(id) {\n    return dispatch => {\n        dispatch(request(id));\n\n        userService.delete(id)\n            .then(\n                user => dispatch(success(id)),\n                error => dispatch(failure(id, error.toString()))\n            );\n    };\n\n    function request(id) { return { type: userConstants.DELETE_REQUEST, id } }\n    function success(id) { return { type: userConstants.DELETE_SUCCESS, id } }\n    function failure(id, error) { return { type: userConstants.DELETE_FAILURE, id, error } }\n}"]},"metadata":{},"sourceType":"module"}