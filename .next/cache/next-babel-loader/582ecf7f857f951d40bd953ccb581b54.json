{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport LoginLayout from '../components/layouts/loginLayout';\nimport Link from 'next/link';\nimport { useForm } from \"react-hook-form\";\nimport { connect } from 'react-redux';\n\nconst LoginPage = ({\n  pageProps\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = formData => {\n    alert(JSON.stringify(formData));\n  };\n\n  const emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/;\n  const {\n    error\n  } = this.props;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Admin | Login\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(\"div\", {\n    className: \"content code\"\n  }, __jsx(\"p\", {\n    className: styles.description\n  }, \"Administrative login\"), error && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, \" Invalid Email Address\"), \" }\")), Object.keys(errors).length != 0 && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, errors.email && __jsx(\"li\", null, \" Invalid Email Address\"), errors.password && __jsx(\"li\", null, \" Password must be minimum of 8 characters, with Uppercase, Lowercase and Symbol. \"))), __jsx(\"form\", {\n    className: \"pure-form pure-form-aligned\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"fieldset\", null, __jsx(\"div\", {\n    className: `pure-control-group ${errors.email && 'error-input'}`\n  }, __jsx(\"label\", {\n    htmlFor: \"email\"\n  }, \"Email Address\"), __jsx(\"input\", {\n    type: \"email\",\n    ref: register({\n      required: true,\n      pattern: emailPattern\n    }),\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"Email Address\"\n  })), __jsx(\"div\", {\n    className: `pure-control-group ${errors.password && 'error-input'}`\n  }, __jsx(\"label\", {\n    htmlFor: \"password\"\n  }, \"Password\"), __jsx(\"input\", {\n    className: ` ${errors.password && 'error'}`,\n    type: \"password\",\n    ref: register({\n      required: true,\n      pattern: passwordPattern\n    }),\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Password\"\n  })), __jsx(\"div\", {\n    className: \"pure-controls\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"pure-button button-secondary\"\n  }, \"Submit\"))))));\n};\n\nLoginPage.Layout = LoginLayout;\nexport default connect()(LoginPage);","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/pages/index.js"],"names":["Head","styles","LoginLayout","Link","useForm","connect","LoginPage","pageProps","register","handleSubmit","errors","onSubmit","formData","alert","JSON","stringify","emailPattern","passwordPattern","error","props","description","Object","keys","length","email","password","required","pattern","Layout"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AAEjC,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAAmCN,OAAO,EAAhD;;AACA,QAAMO,QAAQ,GAAGC,QAAQ,IAAI;AAC3BC,IAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAD,CAAL;AACD,GAFD;;AAIA,QAAMI,YAAY,GAAG,yJAArB;AACA,QAAMC,eAAe,GAAG,6DAAxB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAU,KAAKC,KAArB;AACA,SAEE,4BACE,MAAC,IAAD,QACE,qCADF,EAEE;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC;AAAtB,IAFF,CADF,EAMM;AAAM,IAAA,SAAS,EAAC;AAAhB,KACE;AAAG,IAAA,SAAS,EAAElB,MAAM,CAACmB;AAArB,4BADF,EAEIF,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KACL,kBACE,2CADF,OADK,CAFb,EAWIG,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,IAA8B,CAA9B,IACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,kBACGb,MAAM,CAACc,KAAP,IAAgB,2CADnB,EAEGd,MAAM,CAACe,QAAP,IAAmB,sGAFtB,CADF,CAZN,EAsBE;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAA8C,IAAA,QAAQ,EAAEhB,YAAY,CAACE,QAAD;AAApE,KACA,wBAGI;AAAK,IAAA,SAAS,EAAG,sBAAqBD,MAAM,CAACc,KAAP,IAAgB,aAAc;AAApE,KACI;AAAO,IAAA,OAAO,EAAC;AAAf,qBADJ,EAEI;AACA,IAAA,IAAI,EAAC,OADL;AACa,IAAA,GAAG,EAAEhB,QAAQ,CAAC;AAACkB,MAAAA,QAAQ,EAAC,IAAV;AAAgBC,MAAAA,OAAO,EAACX;AAAxB,KAAD,CAD1B;AAEA,IAAA,IAAI,EAAC,OAFL;AAEa,IAAA,EAAE,EAAC,OAFhB;AAEwB,IAAA,WAAW,EAAC;AAFpC,IAFJ,CAHJ,EAUI;AAAK,IAAA,SAAS,EAAG,sBAAqBN,MAAM,CAACe,QAAP,IAAmB,aAAc;AAAvE,KACI;AAAO,IAAA,OAAO,EAAC;AAAf,gBADJ,EAEI;AAAO,IAAA,SAAS,EAAG,IAAGf,MAAM,CAACe,QAAP,IAAmB,OAAQ,EAAjD;AACA,IAAA,IAAI,EAAC,UADL;AACgB,IAAA,GAAG,EAAEjB,QAAQ,CAAC;AAACkB,MAAAA,QAAQ,EAAC,IAAV;AAAgBC,MAAAA,OAAO,EAACV;AAAxB,KAAD,CAD7B;AAEA,IAAA,IAAI,EAAC,UAFL;AAEgB,IAAA,EAAE,EAAC,UAFnB;AAE8B,IAAA,WAAW,EAAC;AAF1C,IAFJ,CAVJ,EAiBI;AAAK,IAAA,SAAS,EAAC;AAAf,KAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC;AAAhC,cAFJ,CAjBJ,CADA,CAtBF,CANN,CAFF;AA+DD,CAzED;;AA2EAX,SAAS,CAACsB,MAAV,GAAmB1B,WAAnB;AAEA,eAAeG,OAAO,GAAGC,SAAH,CAAtB","sourcesContent":["import Head from 'next/head'\nimport styles from '../styles/Home.module.css'\nimport LoginLayout from '../components/layouts/loginLayout'\nimport Link from 'next/link'\nimport { useForm } from \"react-hook-form\";\nimport { connect } from 'react-redux';\n\nconst LoginPage = ({pageProps}) => {\n\n  const {register, handleSubmit, errors} = useForm();\n  const onSubmit = formData => {\n    alert(JSON.stringify(formData))\n  }\n\n  const emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/\n  const {error} = this.props;\n  return (\n    \n    <>\n      <Head>\n        <title>Admin | Login</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n        \n          <div  className=\"content code\">\n            <p className={styles.description}>Administrative login</p>\n            { error && <div className=\"panel code error-msg\">\n                  <ul>\n                    <li> Invalid Email Address</li> }\n                    \n                  </ul>\n                   \n                </div>\n\n            }\n            { Object.keys(errors).length != 0 && \n                <div className=\"panel code error-msg\">\n                  <ul>\n                    {errors.email && <li> Invalid Email Address</li> }\n                    {errors.password && <li> Password must be minimum of 8 characters, with Uppercase, Lowercase and Symbol. </li> }\n                    \n                  </ul>\n                   \n                </div>\n            }\n            \n            <form className=\"pure-form pure-form-aligned\" onSubmit={handleSubmit(onSubmit)}>\n            <fieldset>\n                \n                \n                <div className={`pure-control-group ${errors.email && 'error-input'}`} >\n                    <label htmlFor=\"email\">Email Address</label>\n                    <input \n                    type=\"email\" ref={register({required:true, pattern:emailPattern})} \n                    name=\"email\" id=\"email\" placeholder=\"Email Address\" />\n                    {/*<span className=\"pure-form-message-inline\">This is a required field.</span>*/}\n                </div>\n                <div className={`pure-control-group ${errors.password && 'error-input'}`}>\n                    <label htmlFor=\"password\">Password</label>\n                    <input className={` ${errors.password && 'error'}`} \n                    type=\"password\" ref={register({required:true, pattern:passwordPattern})} \n                    name=\"password\" id=\"password\" placeholder=\"Password\" />\n                </div>\n                \n                <div className=\"pure-controls\">\n                    \n                    <button type=\"submit\" className=\"pure-button button-secondary\">Submit</button>\n                    \n                </div>\n            </fieldset>\n          </form>\n          </div>\n\n          \n        \n      \n\n    </>\n  )\n}\n\nLoginPage.Layout = LoginLayout\n\nexport default connect()(LoginPage) "]},"metadata":{},"sourceType":"module"}