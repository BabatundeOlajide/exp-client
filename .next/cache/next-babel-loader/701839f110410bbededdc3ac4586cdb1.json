{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport { connect } from 'react-redux';\nimport styles from '../styles/Home.module.css';\nimport { userActions } from \"../actions\";\nimport { useEffect } from \"react\";\nimport { useForm, useWatch } from \"react-hook-form\";\n\nvar ChangePasswordPage = function ChangePasswordPage(_ref) {\n  _s();\n\n  var changePassword = _ref.changePassword,\n      changingPassword = _ref.changingPassword,\n      changeError = _ref.changeError,\n      error = _ref.error,\n      success = _ref.success,\n      pageProps = _ref.pageProps;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(formData) {\n    changePassword(formData.password);\n  };\n\n  var passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/;\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Admin | Change Password\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(\"div\", {\n    className: \"content code\"\n  }, __jsx(\"p\", {\n    className: styles.description\n  }, \"Change Password\"), changeError && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, __jsx(\"li\", null, \" Error changing password\"))), Object.keys(errors).length != 0 && __jsx(\"div\", {\n    className: \"panel code error-msg\"\n  }, __jsx(\"ul\", null, errors.password && __jsx(\"li\", null, \" Password must be minimum of 8 characters, with Uppercase, Lowercase and Symbol. \"), errors.repassword && __jsx(\"li\", null, \" \", errors.repassword, \" \"))), __jsx(\"form\", {\n    className: \"pure-form pure-form-aligned\",\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"fieldset\", null, __jsx(\"div\", {\n    className: \"pure-control-group \".concat(errors.password && 'error-input')\n  }, __jsx(\"label\", {\n    htmlFor: \"password\"\n  }, \"Password\"), __jsx(\"input\", {\n    className: \" \".concat(errors.password && 'error'),\n    type: \"password\",\n    ref: register({\n      required: true,\n      pattern: passwordPattern\n    }),\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Password\"\n  })), __jsx(\"div\", {\n    className: \"pure-control-group \".concat(errors.repassword && 'error-input')\n  }, __jsx(\"label\", {\n    htmlFor: \"repassword\"\n  }, \"Re-Password\"), __jsx(\"input\", {\n    className: \" \".concat(errors.password && 'error'),\n    type: \"password\",\n    ref: register({\n      validate: function validate(value) {\n        return value === watch(\"password\") || \"Password don't match\";\n      }\n    }),\n    name: \"repassword\",\n    id: \"repassword\",\n    placeholder: \"Re-Password\"\n  })), __jsx(\"div\", {\n    className: \"pure-controls\"\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"pure-button button-secondary\"\n  }, \"Submit\"))))));\n};\n\n_s(ChangePasswordPage, \"CPrVJmzAZ9WF0FC7E6yWYmpvqYc=\", false, function () {\n  return [useForm];\n});\n\n_c = ChangePasswordPage;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    changeError: !state.authentication.passwordChangeSuccess && state.authentication.passwordChangeError,\n    error: state.authentication.passwordChangeError,\n    success: state.authentication.passwordChangeSuccess,\n    changingPassword: state.authentication.changingPassword\n  };\n};\n\nvar mapDispatchToProps = {\n  changePassword: userActions.changePassword\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePasswordPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePasswordPage\");","map":{"version":3,"sources":["/Users/babatundeolajide/Projects/ExpressGrub/AdminClient/src/pages/changePassword.js"],"names":["Head","connect","styles","userActions","useEffect","useForm","useWatch","ChangePasswordPage","changePassword","changingPassword","changeError","error","success","pageProps","register","handleSubmit","watch","errors","onSubmit","formData","password","passwordPattern","description","Object","keys","length","repassword","required","pattern","validate","value","mapStateToProps","state","authentication","passwordChangeSuccess","passwordChangeError","mapDispatchToProps"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport { connect } from 'react-redux';\nimport styles from '../styles/Home.module.css'\nimport { userActions } from \"../actions\";\nimport { useEffect } from \"react\";\nimport { useForm, useWatch } from \"react-hook-form\";\n\nconst ChangePasswordPage = ({changePassword,changingPassword, changeError ,error, success, pageProps}) => {\n  const {register, handleSubmit, watch, errors} = useForm();\n  const onSubmit = formData => {\n    changePassword(formData.password);\n\n  }\n\n  \n  const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/\n  \n  return (\n    \n    <>\n      <Head>\n        <title>Admin | Change Password</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n        \n          <div  className=\"content code\">\n            <p className={styles.description}>Change Password</p>\n            { changeError && <div className=\"panel code error-msg\">\n                  <ul>\n                    <li> Error changing password</li>    \n                  </ul>\n                   \n                </div>\n\n            }\n            { Object.keys(errors).length != 0 && \n                <div className=\"panel code error-msg\">\n                  <ul>\n                    {errors.password && <li> Password must be minimum of 8 characters, with Uppercase, Lowercase and Symbol. </li> }\n                    {errors.repassword && <li> {errors.repassword} </li> }\n                    \n                  </ul>\n                   \n                </div>\n            }\n            \n            <form className=\"pure-form pure-form-aligned\" onSubmit={handleSubmit(onSubmit)}>\n            <fieldset>\n                \n                \n                \n                <div className={`pure-control-group ${errors.password && 'error-input'}`}>\n                    <label htmlFor=\"password\">Password</label>\n                    <input className={` ${errors.password && 'error'}`} \n                    type=\"password\" ref={register({required:true, pattern:passwordPattern})} \n                    name=\"password\" id=\"password\" placeholder=\"Password\" />\n                </div>\n\n                <div className={`pure-control-group ${errors.repassword && 'error-input'}`}>\n                    <label htmlFor=\"repassword\">Re-Password</label>\n                    <input className={` ${errors.password && 'error'}`} \n                    type=\"password\" ref={register({\n                      validate: (value) => value === watch(\"password\") || \"Password don't match\"\n                    })} \n                    name=\"repassword\" id=\"repassword\" placeholder=\"Re-Password\" />\n                </div>\n                \n                <div className=\"pure-controls\">\n                    \n                    <button type=\"submit\" className=\"pure-button button-secondary\">Submit</button>\n                    \n                </div>\n            </fieldset>\n          </form>\n          </div>\n\n          \n        \n      \n\n    </>\n  )\n}\n\n\n\nconst mapStateToProps = state => ({\n  changeError: !state.authentication.passwordChangeSuccess && state.authentication.passwordChangeError,\n  error: state.authentication.passwordChangeError,\n  success: state.authentication.passwordChangeSuccess,\n  changingPassword: state.authentication.changingPassword,\n});\n\nconst mapDispatchToProps = {\n  changePassword: userActions.changePassword,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePasswordPage) "]},"metadata":{},"sourceType":"module"}